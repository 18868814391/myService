{"version":3,"sources":["webpack:///./node_modules/es-abstract/es5.js","webpack:///./node_modules/function-bind/index.js","webpack:///./node_modules/string.prototype.trim/polyfill.js","webpack:///./node_modules/tsml/tsml.js","webpack:///./node_modules/es-abstract/helpers/isNaN.js","webpack:///./node_modules/is-callable/index.js","webpack:///./node_modules/videojs-vtt.js/lib/browser-index.js","webpack:///./node_modules/es-to-primitive/es5.js","webpack:///./src/utils/request.js","webpack:///./src/api/index.js","webpack:///./node_modules/video.js/dist/video.cjs.js","webpack:///./src/view/anime/animeDetail.vue?94c4","webpack:///src/view/anime/animeDetail.vue","webpack:///./src/view/anime/animeDetail.vue?b0c5","webpack:///./src/view/anime/animeDetail.vue","webpack:///./node_modules/es-to-primitive/helpers/isPrimitive.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./node_modules/string.prototype.trim/implementation.js","webpack:///./node_modules/es-abstract/helpers/sign.js","webpack:///./node_modules/parse-headers/parse-headers.js","webpack:///./node_modules/function-bind/implementation.js","webpack:///./node_modules/is-function/index.js","webpack:///./node_modules/safe-json-parse/tuple.js","webpack:///./node_modules/has/src/index.js","webpack:///./node_modules/videojs-vtt.js/lib/vttcue.js","webpack:///./node_modules/object-keys/implementation.js","webpack:///./node_modules/string.prototype.trim/shim.js","webpack:///./node_modules/es-abstract/helpers/mod.js","webpack:///./node_modules/global/window.js","webpack:///./node_modules/es-abstract/helpers/assertRecord.js","webpack:///./node_modules/es-abstract/helpers/isFinite.js","webpack:///./node_modules/string.prototype.trim/index.js","webpack:///./node_modules/for-each/index.js","webpack:///./node_modules/videojs-vtt.js/lib/vtt.js","webpack:///./node_modules/object-keys/isArguments.js","webpack:///./node_modules/object-keys/index.js","webpack:///./node_modules/vue-video-player/dist/vue-video-player.js","webpack:///./node_modules/es-abstract/GetIntrinsic.js","webpack:///./node_modules/xhr/index.js","webpack:///./node_modules/global/document.js","webpack:///./src/view/anime/animeDetail.vue?f3a2","webpack:///./node_modules/define-properties/index.js","webpack:///./node_modules/videojs-vtt.js/lib/vttregion.js"],"names":["GetIntrinsic","__webpack_require__","$Object","$TypeError","$String","assertRecord","$isNaN","$isFinite","sign","mod","IsCallable","toPrimitive","has","ES5","ToPrimitive","ToBoolean","value","ToNumber","ToInteger","number","this","Math","floor","abs","ToInt32","x","ToUint32","ToUint16","posInt","ToString","ToObject","CheckObjectCoercible","optMessage","SameValue","y","Type","IsPropertyDescriptor","Desc","allowed","[[Configurable]]","[[Enumerable]]","[[Get]]","[[Set]]","[[Value]]","[[Writable]]","key","isData","IsAccessor","IsAccessorDescriptor","IsDataDescriptor","IsGenericDescriptor","FromPropertyDescriptor","writable","enumerable","configurable","get","set","ToPropertyDescriptor","Obj","desc","getter","TypeError","setter","module","exports","implementation","Function","prototype","bind","zeroWidthSpace","String","trim","clean","s","replace","sa","i","arguments","length","Number","isNaN","a","fnToStr","toString","constructorRegex","isES6ClassFn","fnStr","call","test","e","tryFunctionObject","toStr","Object","fnClass","genClass","hasToStringTag","Symbol","toStringTag","strClass","window","vttjs","WebVTT","VTTCue","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","isPrimitive","isCallable","ES5internalSlots","[[DefaultValue]]","O","actualHint","methods","input","axios","defaults","baseURL","service","create","timeout","levelGet","params","request","url","method","data","UploadTxt","getFile","UploadRichTxt","BlogList","blogDetail","lightNovelList","getlightNovel","getheavyNovel","getMircleDetail","getMusic","getAnime","sendFoot","getFoot","yiiBlogAdd","yiiRegister","yiiLogin","yiiSocketIn","d","__webpack_exports__","_interopDefault","ex","document","tsml","safeParseTuple","xhr","vtt","version","USER_AGENT","navigator","userAgent","webkitVersionMap","exec","appleWebkitVersion","parseFloat","pop","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","match","IS_ANDROID","ANDROID_VERSION","major","minor","IS_OLD_ANDROID","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IS_IE8","IE_VERSION","result","IS_SAFARI","IS_ANY_SAFARI","TOUCH_ENABLED","isReal","maxTouchPoints","DocumentTouch","BACKGROUND_SIZE_SUPPORTED","createElement","style","browser","freeze","_typeof","iterator","obj","constructor","classCallCheck","instance","Constructor","inherits","subClass","superClass","setPrototypeOf","__proto__","possibleConstructorReturn","self","ReferenceError","taggedTemplateLiteralLoose","strings","raw","keys","object","isObject","each","fn","forEach","reduce","initial","undefined","accum","assign","target","_len","sources","Array","_key","apply","concat","source","isPlain","history","LogByTypeFactory","name","log","type","level","args","stringify","lvl","levels","lvlRegExp","RegExp","unshift","toUpperCase","push","console","info","map","isArray","JSON","join","createLogger$1","logByType","createLogger","subname","all","off","debug","warn","error","DEFAULT","hasOwnProperty","Error","filter","fname","historyItem","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","computedStyle","el","prop","getComputedStyle","cs","currentStyle","_templateObject","isNonBlankString","str","throwIfWhitespace","classRegExp","className","isEl","nodeType","isInFrame","parent","createQuerier","selector","context","querySelector","ctx","createEl","tagName","properties","attributes","content","getOwnPropertyNames","propName","val","indexOf","setAttribute","textContent","attrName","appendContent","text","innerText","prependTo","child","firstChild","insertBefore","appendChild","hasClass","element","classToCheck","classList","contains","addClass","classToAdd","add","removeClass","classToRemove","remove","split","c","toggleClass","classToToggle","predicate","setAttributes","attrValue","removeAttribute","getAttributes","tag","knownBooleans","attrs","attrVal","getAttribute","attribute","blockTextSelection","body","focus","onselectstart","unblockTextSelection","getBoundingClientRect","parentNode","rect","k","height","width","findPosition","box","left","top","docEl","documentElement","clientLeft","scrollLeft","pageXOffset","clientTop","scrollTop","pageYOffset","round","getPointerPosition","event","position","boxW","offsetWidth","boxH","offsetHeight","boxY","boxX","pageY","pageX","changedTouches","max","min","isTextNode","emptyEl","removeChild","normalizeContent","createTextNode","node","insertContent","isSingleLeftClick","button","buttons","$","$$","Dom","_guid","newGUID","elData","elIdAttr","Date","getTime","getData","id","hasData","removeData","_cleanUpEvents","elem","handlers","removeEventListener","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","callback","fixEvent","returnTrue","returnFalse","isPropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","clientY","which","charCode","keyCode","_supportsPassive","opts","defineProperty","addEventListener","passiveEvents","on","guid","hash","handlersCopy","slice","m","n","options","passive","attachEvent","removeType","t","splice","trigger","elemData","ownerDocument","bubbles","targetData","one","func","Events","_windowLoaded","videojs$2","autoSetup","vids","getElementsByTagName","audios","divs","mediaEls","_i","_e","_i2","_e2","_i3","_e3","mediaEl","autoSetupTimeout","player","wait","vjs","setTimeout","readyState","createStyleElement","setTextContent","styleSheet","cssText","uid","bound","throttle","last","now","throttled","debounce","immediate","cancel","clearTimeout","debounced","_later","EventTarget","allowedEvents_","ael","dispatchEvent","isEvented","eventBusEl_","every","isValidEventType","validateTarget","nodeName","validateEventType","validateListener","listener","normalizeListenArgs","isTargetingSelf","shift","listen","EventedMixin","_this","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_this2","_normalizeListenArgs2","wrapper","largs","targetOrType","typeOrListener","evented","eventBusKey","StatefulMixin","state","setState","stateUpdates","changes","from","to","stateful","defaultState","handleStateChanged","toTitleCase","string","charAt","titleCaseEquals","str1","str2","mergeOptions","Component","ready","play","player_","options_","id_","name_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","dispose","localize","tokens","defaultValue","code","language","languages","primaryCode","primaryLang","localizedString","index","ret","contentEl","contentEl_","children","getChildById","getChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","childNodes","refNode","childFound","compEl","parentOptions","handleAdd","playerOptions","newChild","workingChildren","Tech","some","wchild","isTech","buildCSSClass","sync","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","parseInt","currentDimension","computedWidthOrHeight","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","blur","emitTapEvents","touchStart","firstTouch","tapMovementThreshold","touchTimeThreshold","couldBeTap","touches","xdiff","ydiff","touchDistance","sqrt","noTap","touchTime","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","disposeFn","interval","_this3","intervalId","requestAnimationFrame","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","isComp","isPrototypeOf","reason","components_","Player","players","playerNames","pname","Boolean","rangeCheck","fnName","maxIndex","getRange","valueIndex","ranges","rangeIndex","createTimeRangesObj","start","end","createTimeRanges","bufferedPercent","buffered","duration","bufferedDuration","FullscreenApi","apiMap","specApi","browserApi","MediaError","message","defaultMessages","status","errorTypes","1","2","3","4","5","errNum","isPromise","then","silencePromise","trackToJson_","track","acc","cues","cue","startTime","endTime","textTracksToJson","tech","trackEls","trackObjs","tracks","trackEl","json","src","textTracks","jsonToTextTracks","addedTrack","addRemoteTextTrack","addCue","textTrackConverter","MODAL_CLASS_NAME","ESC","ModalDialog","_Component","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","tabIndex","aria-describedby","aria-hidden","aria-label","label","previouslyActiveEl_","handleKeyPress","close","open","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","handleKeyDown","focusableEls","focusableEls_","focusIndex","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","_ret","list","tracks_","addTrack","removeTrack","rtrack","l","getTrackById","change","addtrack","removetrack","disableOthers","enabled","AudioTrackList","_TrackList","_prop","changing_","disableOthers$1","selected","VideoTrackList","TextTrackList","nonLanguageTextTrackKind","kind","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","parseUrl","props","href","addToBody","host","protocol","div","innerHTML","details","location","getAbsoluteURL","getFileExtension","path","splitPathRe","pathParts","toLowerCase","isCrossOrigin","winLoc","urlInfo","srcProtocol","crossOrigin","Url","parseCues","srcContent","parser","Parser","StringDecoder","errors","oncue","onparsingerror","onflush","parse","groupCollapsed","groupEnd","flush","loadTrack","uri","cors","err","response","responseBody","loaded_","tech_","loadHandler","TextTrack","_Track","settings","srclang","mode","default_","tt","activeCues_","activeCues","changed","timeupdateHandler","newMode","ct","currentTime","active","originalCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADING","LOADED","ERROR","HTMLTrackElement","load","NORMAL","audio","ListClass","TrackClass","capitalName","video","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","createTrackHelper","names","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","script","onload","onerror","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createRemoteTextTrack","_this7","manualCleanup","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","setPoster","playsinline","setPlaysinline","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","videojs","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","deferrable","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","use","middleware","next","setSourceHelper","setTech","mw","get$1","reduceRight","middlewareIterator","set$1","arg","mediate","callMethod","middlewareValue","terminated","executeRight","allowedGetters","seekable","allowedSetters","allowedMediators","mws","clearCacheForPlayer","getOrCreateFactory","mwFactory","_mws$i","mwf","mwi","lastRun","mwrest","_src","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","mp3","aac","oga","m3u8","getMimetype","ext","mimetype","findMimetype","cache_","matchingSources","filterSource","newsrc","srcobj","fixSource","MediaLoader","j","techOrder","techName","isSupported","loadTech_","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleClick","handleFocus","handleBlur","PosterImage","_ClickableComponent","update","fallbackImg_","poster","setSrc","backgroundImage","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","modes","trackList","userPref","selectedLanguage","firstDesc","firstCaptions","preferredTrack","aria-atomic","clearDisplay","processCues","descriptionsTrack","captionsSubtitlesTrack","updateForTrack","textTrackSettings","overrides","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","bottom","fontFamily","fontVariant","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","cb","playToggle","playFocus","CloseButton","PlayToggle","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","h","gm","gh","Infinity","setFormatTime","customImplementation","resetFormatTime","formatTime","TimeDisplay","throttledUpdateContent","updateContent","plainName","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","time","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","Slider","bar","barName","vertical","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","percentage","toFixed","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","bufferedEnd","percentify","percent","part","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","PlayProgressBar","rafId_","timeTooltip","MouseTimeDisplay","STEP_SECONDS","UPDATE_REFRESH_INTERVAL","SeekBar","_Slider","setEventHandlers_","updateInterval","update_","getCurrentTime_","videoWasPlaying","newTime","mouseTimeDisplay","handleAction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","FullscreenToggle","handleFullscreenChange","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","volume","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","soundOff","VolumePanel","inline","volumeControl","volumePanelState_","sliderActive_","sliderInactive_","muteToggle","Menu","menuButton_","menuButton","focusedChild_","addItem","unpressButton","contentElType","append","stepChild","item","haveTitle","MenuButton","buttonClass","handleSubmenuKeyPress","menu","createMenu","buttonPressed_","items","hideThreshold_","title","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","TrackButton","_MenuButton","updateHandler","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","kinds","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","default","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","LOCAL_STORAGE_KEY","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","v","parseOptionValue","getSelectedOptionValue","selectedIndex","setSelectedOption","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","o","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","setValues","values","localStorage","getItem","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unobserve","disconnect","resizeObserver","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","Element","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","getInnerHTMLDescriptor","HTMLMediaElement","firstSourceWatch","resetSourceWatch_","innerDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","getSrcDescriptor","setupSourceset","resetSourceset_","srcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$2","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","elTracks","techTracks","listeners","currentTarget","removeOldTracks","removeTracks","found","eventName","playerElIngest","movingMediaElementInDOM","clone","tagAttributes","techId","class","playerId","preload","settingsAttrs","attr","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","performance","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","mp4RE","patchCanPlayType","unpatchCanPlayType","r","_templateObject$1","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","substring","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","isPosterFromTech_","queuedCallbacks_","userActive_","languagesToLower","name$$1","languages_","poster_","controls_","autoplay","scrubbing_","lastPlaybackRate","defaultPlaybackRate","playerOptionsCopy","plugins","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleFullscreenChange_","handleStageClick_","breakpoints","responsive","changingSrc_","playWaitingForReady_","playOnLoadstart_","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid_","fluid","aspectRatio","links","linkEl","_dimension","privDimension","updateStyleEl_","parsedVal","ratio","aspectRatio_","idClass","videoWidth","videoHeight","ratioParts","ratioMultiplier","width_","height_","_width","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","loop","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","hasStarted","manualAutoplay_","previouslyMuted","promise","updateSourceCaches_","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","updateCache","techSrc","techGet","queued","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userWasActive","PromiseClass","Promise","resolve","play_","_this8","isScrubbing","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fsApi","fullscreenchange","documentFullscreenChange","fullscreenElement","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","fullWindowOnEscKey","selectSource","_this9","techs","_ref","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","foundSourceAndTech","flip","b","finder","_ref2","sourceOrder","_this10","middlewareSource","src_","notSupportedMessage","_this11","sourceTech","currentSources","currentType","techAutoplay","newPoster","usingNativeControls_","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","inactivityTimeout","isAudio_","_ref3","_ref3$track","toJSON","createModal","_this12","modal","updateCurrentBreakpoint_","currentBreakpoint","candidateBreakpoint","maxWidth","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","current","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","html5","flash","userLanguage","BASE_PLUGIN_NAME","PLUGIN_CACHE_KEY","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createBasicPlugin","plugin","basicPluginWrapper","createPluginFactory","PluginSubClass","getEventHash","Plugin","VERSION","isBasic","p","registerPlugin","deregisterPlugin","getPlugins","getPluginVersion","usingPlugin","hasPlugin","_inherits","super_","extendFn","subClassMethods","HTMLVideoElement","normalizeId","getPlayer","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","getPlayers","nId","_tag","_player","getAllPlayers","comp","writeable","extend","addLanguage","_mergeOptions","createTimeRange","dom","render","_vm","_h","$createElement","_c","_self","staticClass","ref","_v","_l","click","$event","sele","_s","staticRenderFns","animeDetailvue_type_script_lang_js_","components","videoPlayer","vue_video_player","timeDivider","durationDisplay","fullscreenToggle","computed","$refs","created","$route","query","api","sort","catch","anime_animeDetailvue_type_script_lang_js_","componentNormalizer","ES","leftWhitespace","rightWhitespace","S","headers","row","ERROR_MESSAGE","funcType","that","binder","boundLength","boundArgs","Empty","isFunction","alert","confirm","prompt","SafeParseTuple","reviver","autoKeyword","directionSetting","","lr","rl","alignSetting","middle","findDirectionSetting","findAlignSetting","align","cobj","isIE8","baseObj","hasBeenReset","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","setting","SyntaxError","getCueAsHTML","convertCueToDOMTree","keysShim","isArgs","isEnumerable","propertyIsEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","ctor","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","equalsConstructorPrototypeIfNotBuggy","isArguments","isString","theKeys","skipProto","skipConstructor","define","getPolyfill","polyfill","modulo","remain","global","win","$SyntaxError","predicates","Property Descriptor","recordType","argumentName","isFinite","boundTrim","forEachArray","array","receiver","len","forEachString","forEachObject","thisArg","_objCreate","F","ParsingError","errorData","parseTimeStamp","computeSeconds","f","Settings","parseOptions","keyValueDelim","groupDelim","groups","kv","parseCue","regionList","oInput","consumeTimeStamp","ts","Errors","BadTimeStamp","consumeCueSettings","region","alt","vals","vals0","integer","line","lineAlign","snapToLines","size","positionAlign","skipWhitespace","substr","BadSignature","dflt","defaultKey","ESCAPE","&amp;","&lt;","&gt;","&lrm;","&rlm;","&nbsp;","TAG_NAME","u","ruby","rt","lang","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","consume","unescape1","unescape","shouldAdd","localName","annotation","rootDiv","tagStack","createProcessingInstruction","strongRTLRanges","isStrongRTLChar","currentRange","determineBidi","nodeStack","pushNodes","nextTextNode","charCodeAt","computeLinePos","textTrackList","mediaElement","count","StyleBox","CueStyleBox","styleOptions","styles","display","writingMode","unicodeBidi","applyStyles","textAlign","font","whiteSpace","direction","stylesunicodeBidi","textPos","formatStyle","move","BoxPosition","lh","offsetTop","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","findBestPosition","axis","bestPosition","specifiedPosition","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","boxPosition","linePos","step","maxPosition","initialAxis","ceil","reverse","calculatedPercentage","toCSSCompatValues","unit","toMove","overlaps","b2","boxes","container","intersectArea","reference","getSimpleBoxPosition","decode","decodeURIComponent","encodeURIComponent","cuetext","FONT_SIZE_PERCENT","FONT_STYLE","CUE_BACKGROUND_PADDING","overlay","paddedOverlay","shouldCompute","margin","decoder","buffer","TextDecoder","reportOrThrowError","collectNextLine","pos","parseRegion","xy","anchor","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseTimestampMap","ontimestampmap","MPEGTS","LOCAL","parseHeader","stream","alreadyCollectedLine","hasSubstring","callee","origKeys","originalKeys","keysWorksWithArguments","__esModule","customEventName","required","events","globalOptions","progressControl","volumeMenuButton","globalEvents","reseted","mounted","initialize","beforeDestroy","$emit","__ob__","$nextTick","watch","deep","install","_compiled","functional","_scopeId","$vnode","ssrContext","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","beforeCreate","_injectStyles","esModule","generator","asyncFn","asyncGen","ThrowTypeError","hasSymbols","getProto","getPrototypeOf","generatorFunction","asyncFunction","asyncGenFunction","asyncGenIterator","TypedArray","Uint8Array","INTRINSICS","$ %Array%","$ %ArrayBuffer%","ArrayBuffer","$ %ArrayBufferPrototype%","$ %ArrayIteratorPrototype%","$ %ArrayPrototype%","$ %ArrayProto_entries%","entries","$ %ArrayProto_forEach%","$ %ArrayProto_keys%","$ %ArrayProto_values%","$ %AsyncFromSyncIteratorPrototype%","$ %AsyncFunction%","$ %AsyncFunctionPrototype%","$ %AsyncGenerator%","$ %AsyncGeneratorFunction%","$ %AsyncGeneratorPrototype%","$ %AsyncIteratorPrototype%","asyncIterator","$ %Atomics%","Atomics","$ %Boolean%","$ %BooleanPrototype%","$ %DataView%","DataView","$ %DataViewPrototype%","$ %Date%","$ %DatePrototype%","$ %decodeURI%","decodeURI","$ %decodeURIComponent%","$ %encodeURI%","encodeURI","$ %encodeURIComponent%","$ %Error%","$ %ErrorPrototype%","$ %eval%","eval","$ %EvalError%","EvalError","$ %EvalErrorPrototype%","$ %Float32Array%","Float32Array","$ %Float32ArrayPrototype%","$ %Float64Array%","Float64Array","$ %Float64ArrayPrototype%","$ %Function%","$ %FunctionPrototype%","$ %Generator%","$ %GeneratorFunction%","$ %GeneratorPrototype%","$ %Int8Array%","Int8Array","$ %Int8ArrayPrototype%","$ %Int16Array%","Int16Array","$ %Int16ArrayPrototype%","$ %Int32Array%","Int32Array","$ %Int32ArrayPrototype%","$ %isFinite%","$ %isNaN%","$ %IteratorPrototype%","$ %JSON%","$ %JSONParse%","$ %Map%","Map","$ %MapIteratorPrototype%","$ %MapPrototype%","$ %Math%","$ %Number%","$ %NumberPrototype%","$ %Object%","$ %ObjectPrototype%","$ %ObjProto_toString%","$ %ObjProto_valueOf%","valueOf","$ %parseFloat%","$ %parseInt%","$ %Promise%","$ %PromisePrototype%","$ %PromiseProto_then%","$ %Promise_all%","$ %Promise_reject%","reject","$ %Promise_resolve%","$ %Proxy%","Proxy","$ %RangeError%","RangeError","$ %RangeErrorPrototype%","$ %ReferenceError%","$ %ReferenceErrorPrototype%","$ %Reflect%","Reflect","$ %RegExp%","$ %RegExpPrototype%","$ %Set%","Set","$ %SetIteratorPrototype%","$ %SetPrototype%","$ %SharedArrayBuffer%","SharedArrayBuffer","$ %SharedArrayBufferPrototype%","$ %String%","$ %StringIteratorPrototype%","$ %StringPrototype%","$ %Symbol%","$ %SymbolPrototype%","$ %SyntaxError%","$ %SyntaxErrorPrototype%","$ %ThrowTypeError%","$ %TypedArray%","$ %TypedArrayPrototype%","$ %TypeError%","$ %TypeErrorPrototype%","$ %Uint8Array%","$ %Uint8ArrayPrototype%","$ %Uint8ClampedArray%","Uint8ClampedArray","$ %Uint8ClampedArrayPrototype%","$ %Uint16Array%","Uint16Array","$ %Uint16ArrayPrototype%","$ %Uint32Array%","Uint32Array","$ %Uint32ArrayPrototype%","$ %URIError%","URIError","$ %URIErrorPrototype%","$ %WeakMap%","WeakMap","$ %WeakMapPrototype%","$ %WeakSet%","WeakSet","$ %WeakSetPrototype%","allowMissing","parseHeaders","xtend","isEmpty","initParams","createXHR","_createXHR","called","readystatechange","loadFunc","getBody","responseText","getXml","isJson","errorFunc","evt","timeoutTimer","statusCode","failureResponse","aborted","useXDR","rawRequest","getAllResponseHeaders","XDomainRequest","XMLHttpRequest","onreadystatechange","onprogress","onabort","ontimeout","username","password","withCredentials","abort","setRequestHeader","responseType","beforeSend","send","responseXML","firefoxBugTakenEffect","doccy","topLevel","minDoc","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_animeDetail_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_animeDetail_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","origDefineProperty","arePropertyDescriptorsSupported","_","supportsDescriptors","defineProperties","getOwnPropertySymbols","scrollSetting","up","findScrollSetting","isValidPercentValue","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll"],"mappings":"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","file":"js/chunk-4947c5c2.6e106ab5.js","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('./GetIntrinsic');\n\nvar $Object = GetIntrinsic('%Object%');\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $String = GetIntrinsic('%String%');\n\nvar assertRecord = require('./helpers/assertRecord');\nvar $isNaN = require('./helpers/isNaN');\nvar $isFinite = require('./helpers/isFinite');\n\nvar sign = require('./helpers/sign');\nvar mod = require('./helpers/mod');\n\nvar IsCallable = require('is-callable');\nvar toPrimitive = require('es-to-primitive/es5');\n\nvar has = require('has');\n\n// https://es5.github.io/#x9\nvar ES5 = {\n\tToPrimitive: toPrimitive,\n\n\tToBoolean: function ToBoolean(value) {\n\t\treturn !!value;\n\t},\n\tToNumber: function ToNumber(value) {\n\t\treturn +value; // eslint-disable-line no-implicit-coercion\n\t},\n\tToInteger: function ToInteger(value) {\n\t\tvar number = this.ToNumber(value);\n\t\tif ($isNaN(number)) { return 0; }\n\t\tif (number === 0 || !$isFinite(number)) { return number; }\n\t\treturn sign(number) * Math.floor(Math.abs(number));\n\t},\n\tToInt32: function ToInt32(x) {\n\t\treturn this.ToNumber(x) >> 0;\n\t},\n\tToUint32: function ToUint32(x) {\n\t\treturn this.ToNumber(x) >>> 0;\n\t},\n\tToUint16: function ToUint16(value) {\n\t\tvar number = this.ToNumber(value);\n\t\tif ($isNaN(number) || number === 0 || !$isFinite(number)) { return 0; }\n\t\tvar posInt = sign(number) * Math.floor(Math.abs(number));\n\t\treturn mod(posInt, 0x10000);\n\t},\n\tToString: function ToString(value) {\n\t\treturn $String(value);\n\t},\n\tToObject: function ToObject(value) {\n\t\tthis.CheckObjectCoercible(value);\n\t\treturn $Object(value);\n\t},\n\tCheckObjectCoercible: function CheckObjectCoercible(value, optMessage) {\n\t\t/* jshint eqnull:true */\n\t\tif (value == null) {\n\t\t\tthrow new $TypeError(optMessage || 'Cannot call method on ' + value);\n\t\t}\n\t\treturn value;\n\t},\n\tIsCallable: IsCallable,\n\tSameValue: function SameValue(x, y) {\n\t\tif (x === y) { // 0 === -0, but they are not identical.\n\t\t\tif (x === 0) { return 1 / x === 1 / y; }\n\t\t\treturn true;\n\t\t}\n\t\treturn $isNaN(x) && $isNaN(y);\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/5.1/#sec-8\n\tType: function Type(x) {\n\t\tif (x === null) {\n\t\t\treturn 'Null';\n\t\t}\n\t\tif (typeof x === 'undefined') {\n\t\t\treturn 'Undefined';\n\t\t}\n\t\tif (typeof x === 'function' || typeof x === 'object') {\n\t\t\treturn 'Object';\n\t\t}\n\t\tif (typeof x === 'number') {\n\t\t\treturn 'Number';\n\t\t}\n\t\tif (typeof x === 'boolean') {\n\t\t\treturn 'Boolean';\n\t\t}\n\t\tif (typeof x === 'string') {\n\t\t\treturn 'String';\n\t\t}\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n\tIsPropertyDescriptor: function IsPropertyDescriptor(Desc) {\n\t\tif (this.Type(Desc) !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\tvar allowed = {\n\t\t\t'[[Configurable]]': true,\n\t\t\t'[[Enumerable]]': true,\n\t\t\t'[[Get]]': true,\n\t\t\t'[[Set]]': true,\n\t\t\t'[[Value]]': true,\n\t\t\t'[[Writable]]': true\n\t\t};\n\n\t\tfor (var key in Desc) { // eslint-disable-line\n\t\t\tif (has(Desc, key) && !allowed[key]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tvar isData = has(Desc, '[[Value]]');\n\t\tvar IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n\t\tif (isData && IsAccessor) {\n\t\t\tthrow new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n\t\t}\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.1\n\tIsAccessorDescriptor: function IsAccessorDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!has(Desc, '[[Get]]') && !has(Desc, '[[Set]]')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.2\n\tIsDataDescriptor: function IsDataDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!has(Desc, '[[Value]]') && !has(Desc, '[[Writable]]')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.3\n\tIsGenericDescriptor: function IsGenericDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!this.IsAccessorDescriptor(Desc) && !this.IsDataDescriptor(Desc)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.4\n\tFromPropertyDescriptor: function FromPropertyDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn Desc;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (this.IsDataDescriptor(Desc)) {\n\t\t\treturn {\n\t\t\t\tvalue: Desc['[[Value]]'],\n\t\t\t\twritable: !!Desc['[[Writable]]'],\n\t\t\t\tenumerable: !!Desc['[[Enumerable]]'],\n\t\t\t\tconfigurable: !!Desc['[[Configurable]]']\n\t\t\t};\n\t\t} else if (this.IsAccessorDescriptor(Desc)) {\n\t\t\treturn {\n\t\t\t\tget: Desc['[[Get]]'],\n\t\t\t\tset: Desc['[[Set]]'],\n\t\t\t\tenumerable: !!Desc['[[Enumerable]]'],\n\t\t\t\tconfigurable: !!Desc['[[Configurable]]']\n\t\t\t};\n\t\t} else {\n\t\t\tthrow new $TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');\n\t\t}\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.5\n\tToPropertyDescriptor: function ToPropertyDescriptor(Obj) {\n\t\tif (this.Type(Obj) !== 'Object') {\n\t\t\tthrow new $TypeError('ToPropertyDescriptor requires an object');\n\t\t}\n\n\t\tvar desc = {};\n\t\tif (has(Obj, 'enumerable')) {\n\t\t\tdesc['[[Enumerable]]'] = this.ToBoolean(Obj.enumerable);\n\t\t}\n\t\tif (has(Obj, 'configurable')) {\n\t\t\tdesc['[[Configurable]]'] = this.ToBoolean(Obj.configurable);\n\t\t}\n\t\tif (has(Obj, 'value')) {\n\t\t\tdesc['[[Value]]'] = Obj.value;\n\t\t}\n\t\tif (has(Obj, 'writable')) {\n\t\t\tdesc['[[Writable]]'] = this.ToBoolean(Obj.writable);\n\t\t}\n\t\tif (has(Obj, 'get')) {\n\t\t\tvar getter = Obj.get;\n\t\t\tif (typeof getter !== 'undefined' && !this.IsCallable(getter)) {\n\t\t\t\tthrow new TypeError('getter must be a function');\n\t\t\t}\n\t\t\tdesc['[[Get]]'] = getter;\n\t\t}\n\t\tif (has(Obj, 'set')) {\n\t\t\tvar setter = Obj.set;\n\t\t\tif (typeof setter !== 'undefined' && !this.IsCallable(setter)) {\n\t\t\t\tthrow new $TypeError('setter must be a function');\n\t\t\t}\n\t\t\tdesc['[[Set]]'] = setter;\n\t\t}\n\n\t\tif ((has(desc, '[[Get]]') || has(desc, '[[Set]]')) && (has(desc, '[[Value]]') || has(desc, '[[Writable]]'))) {\n\t\t\tthrow new $TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');\n\t\t}\n\t\treturn desc;\n\t}\n};\n\nmodule.exports = ES5;\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\nvar implementation = require('./implementation');\n\nvar zeroWidthSpace = '\\u200b';\n\nmodule.exports = function getPolyfill() {\n\tif (String.prototype.trim && zeroWidthSpace.trim() === zeroWidthSpace) {\n\t\treturn String.prototype.trim;\n\t}\n\treturn implementation;\n};\n","function clean (s) {\n  return s.replace(/\\n\\r?\\s*/g, '')\n}\n\n\nmodule.exports = function tsml (sa) {\n  var s = ''\n    , i = 0\n\n  for (; i < arguments.length; i++)\n    s += clean(sa[i]) + (arguments[i + 1] || '')\n\n  return s\n}","module.exports = Number.isNaN || function isNaN(a) {\n\treturn a !== a;\n};\n","'use strict';\n\nvar fnToStr = Function.prototype.toString;\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isCallable(value) {\n\tif (!value) { return false; }\n\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\tif (typeof value === 'function' && !value.prototype) { return true; }\n\tif (hasToStringTag) { return tryFunctionObject(value); }\n\tif (isES6ClassFn(value)) { return false; }\n\tvar strClass = toStr.call(value);\n\treturn strClass === fnClass || strClass === genClass;\n};\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nvar isPrimitive = require('./helpers/isPrimitive');\n\nvar isCallable = require('is-callable');\n\n// http://ecma-international.org/ecma-262/5.1/#sec-8.12.8\nvar ES5internalSlots = {\n\t'[[DefaultValue]]': function (O) {\n\t\tvar actualHint;\n\t\tif (arguments.length > 1) {\n\t\t\tactualHint = arguments[1];\n\t\t} else {\n\t\t\tactualHint = toStr.call(O) === '[object Date]' ? String : Number;\n\t\t}\n\n\t\tif (actualHint === String || actualHint === Number) {\n\t\t\tvar methods = actualHint === String ? ['toString', 'valueOf'] : ['valueOf', 'toString'];\n\t\t\tvar value, i;\n\t\t\tfor (i = 0; i < methods.length; ++i) {\n\t\t\t\tif (isCallable(O[methods[i]])) {\n\t\t\t\t\tvalue = O[methods[i]]();\n\t\t\t\t\tif (isPrimitive(value)) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow new TypeError('No default value');\n\t\t}\n\t\tthrow new TypeError('invalid [[DefaultValue]] hint supplied');\n\t}\n};\n\n// http://ecma-international.org/ecma-262/5.1/#sec-9.1\nmodule.exports = function ToPrimitive(input) {\n\tif (isPrimitive(input)) {\n\t\treturn input;\n\t}\n\tif (arguments.length > 1) {\n\t\treturn ES5internalSlots['[[DefaultValue]]'](input, arguments[1]);\n\t}\n\treturn ES5internalSlots['[[DefaultValue]]'](input);\n};\n","import axios from 'axios'\r\n// import { Toast } from 'vant';\r\n// import store from '../store'\r\n// import { getToken } from '@/utils/auth'\r\n\r\n// 创建axios实例\r\nif (process.env.NODE_ENV == 'development') { //测试用\r\n  //http://lantian-api.lanland.vip\r\n  //http://lantian-api-test.netmi.com.cn\r\n  //https://merchant-api-f.netmi.com.cn\r\n  //https://merchant-api-test.netmi.com.cn\r\n  //window.location.origin\r\n  // axios.defaults.baseURL = 'http://localhost/phpdemo/syf/php';\r\n  //http://118.31.62.251/syf/php\r\n  //   /apis/syf/php\r\n}else{\r\n  axios.defaults.baseURL = '/apis/syf/php';\r\n}\r\nconst service = axios.create({\r\n  timeout: 10000, // 请求超时时间\r\n})\r\n\r\n// request拦截器\r\n// service.interceptors.request.use(\r\n//   config => {\r\n//     if (store.getters.token) {\r\n//       config.headers['X-Token'] = getToken() // 让每个请求携带自定义token 请根据实际情况自行修改\r\n//     }\r\n//     return config\r\n//   },\r\n//   error => {\r\n//     // Do something with request error\r\n//     Promise.reject(error)\r\n//   }\r\n// )\r\n\r\n// response 拦截器\r\n// service.interceptors.response.use(\r\n//   response => {\r\n//     /**\r\n//      * code为非20000是抛错 可结合自己业务进行修改\r\n//      */\r\n//     const res = response.data\r\n//     if (res.errcode !== 0) {\r\n//       if (res.errcode==10000||res.errcode==10001) {        \r\n//           store.dispatch('FedLogOut').then(() => {\r\n//             location.reload() // 为了重新实例化vue-router对象 避免bug\r\n//           })\r\n//       }\r\n//       return Promise.reject(res)\r\n//     } else {\r\n//       if(response.data.data){\r\n//         return response.data\r\n//       }else{\r\n//         response.data['data'] = ''\r\n//         return response.data\r\n//       }\r\n      \r\n//     }\r\n//   },\r\n//   error => {\r\n//     Toast(error)\r\n//     return Promise.reject(error)\r\n//   }\r\n// )\r\n\r\nexport default service\r\n","import request from '@/utils/request'\r\n\r\nexport function register(params) { return request({ url: '/login/register.php', method: 'post', data: params }) }// 注册\r\nexport function loginIN(params) { return request({ url: '/login/login.php', method: 'post', data: params }) }// 登陆\r\nexport function levelGet(params) { return request({ url: '/login/level.php', method: 'post', data: params }) }// 权限\r\nexport function UploadTxt(params) { return request({ url: '/upload/fileUpload.php', method: 'post', data: params }) }// 文件上传\r\nexport function getFile(params) { return request({ url: '/upload/getFile.php', method: 'post', data: params }) }// 文件下载\r\nexport function UploadRichTxt(params) { return request({ url: '/upload/richTxtUpload.php', method: 'post', data: params }) }// 富文本上传\r\nexport function BlogRichTxt(params) { return request({ url: '/upload/BlogRichTxt.php', method: 'post', data: params }) }// blog上传\r\nexport function BlogList(params) { return request({ url: '/upload/BlogList.php', method: 'post', data: params }) }// blog列表\r\nexport function blogDetail(params) { return request({ url: '/upload/BlogDetail.php', method: 'post', data: params }) }// blog详情\r\nexport function lightNovelList(params) { return request({ url: '/novel/lightNovelList.php', method: 'post', data: params }) }// 获取轻小说列表\r\nexport function getlightNovel(params) { return request({ url: '/novel/getNovel.php', method: 'post', data: params }) }// 获取轻小说内容\r\nexport function getheavyNovel(params) { return request({ url: '/novel/heavyNovelList.php', method: 'post', data: params }) }// 获取重小说章节\r\nexport function getMircleDetail(params) { return request({ url: '/novel/mircleDetail.php', method: 'post', data: params }) }// 获取重小说内容\r\nexport function getMusic(params) { return request({ url: '/media/music.php', method: 'post', data: params }) }// 获取音乐名字\r\nexport function getAnime(params) { return request({ url: '/media/anime.php', method: 'post', data: params }) }// 获取动画\r\nexport function sendFoot(params) { return request({ url: '/interaction/footprint.php', method: 'post', data: params }) }// 发送留言\r\nexport function getFoot(params) { return request({ url: '/interaction/footList.php', method: 'post', data: params }) }// 获取留言\r\nexport function yiiBlogAdd(params) { return request({ url: '/yii/web/index.php?r=blog/more', method: 'post', data: params }) }// yii新增博客\r\nexport function yiiRegister(params) { return request({ url: '/yii/web/index.php?r=user/register', method: 'post', data: params }) }// yii注册\r\nexport function yiiLogin(params) { return request({ url: '/yii/web/index.php?r=user/login', method: 'post', data: params }) }// yii登陆\r\nexport function yiiSocketIn(params) { return request({ url: '/yii/web/index.php?r=socketdata/addmessage', method: 'post', data: params }) }// yii socket消息存入\r\n","/**\n * @license\n * Video.js 6.13.0 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar window = _interopDefault(require('global/window'));\nvar document = _interopDefault(require('global/document'));\nvar tsml = _interopDefault(require('tsml'));\nvar safeParseTuple = _interopDefault(require('safe-json-parse/tuple'));\nvar xhr = _interopDefault(require('xhr'));\nvar vtt = _interopDefault(require('videojs-vtt.js'));\n\nvar version = \"6.13.0\";\n\n/**\n * @file browser.js\n * @module browser\n */\nvar USER_AGENT = window.navigator && window.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n\n/*\n * Device is an iPhone\n *\n * @type {Boolean}\n * @constant\n * @private\n */\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n  return null;\n}();\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n  return null;\n}();\n\n// Old Android is defined as Version older than 2.3, and requiring a webkit version of the android browser\nvar IS_OLD_ANDROID = IS_ANDROID && /webkit/i.test(USER_AGENT) && ANDROID_VERSION < 2.3;\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n  return null;\n}();\nvar IS_IE8 = /MSIE\\s8\\.0/.test(USER_AGENT);\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window || window.navigator.maxTouchPoints || window.DocumentTouch && window.document instanceof window.DocumentTouch);\n\nvar BACKGROUND_SIZE_SUPPORTED = isReal() && 'backgroundSize' in window.document.createElement('video').style;\n\nvar browser = (Object.freeze || Object)({\n\tIS_IPAD: IS_IPAD,\n\tIS_IPHONE: IS_IPHONE,\n\tIS_IPOD: IS_IPOD,\n\tIS_IOS: IS_IOS,\n\tIOS_VERSION: IOS_VERSION,\n\tIS_ANDROID: IS_ANDROID,\n\tANDROID_VERSION: ANDROID_VERSION,\n\tIS_OLD_ANDROID: IS_OLD_ANDROID,\n\tIS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n\tIS_FIREFOX: IS_FIREFOX,\n\tIS_EDGE: IS_EDGE,\n\tIS_CHROME: IS_CHROME,\n\tCHROME_VERSION: CHROME_VERSION,\n\tIS_IE8: IS_IE8,\n\tIE_VERSION: IE_VERSION,\n\tIS_SAFARI: IS_SAFARI,\n\tIS_ANY_SAFARI: IS_ANY_SAFARI,\n\tTOUCH_ENABLED: TOUCH_ENABLED,\n\tBACKGROUND_SIZE_SUPPORTED: BACKGROUND_SIZE_SUPPORTED\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar taggedTemplateLiteralLoose = function (strings, raw) {\n  strings.raw = raw;\n  return strings;\n};\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\nfunction reduce(object, fn) {\n  var initial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\nfunction assign(target) {\n  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n\n  return target;\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isObject(value) {\n  return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file create-logger.js\n * @module create-logger\n */\n// This is the private tracking variable for the logging history.\nvar history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\nvar LogByTypeFactory = function LogByTypeFactory(name, log) {\n  return function (type, level, args, stringify) {\n    var lvl = log.levels[level];\n    var lvlRegExp = new RegExp('^(' + lvl + ')$');\n\n    if (type !== 'log') {\n\n      // Add the type to the front of the message when it's not \"log\".\n      args.unshift(type.toUpperCase() + ':');\n    }\n\n    // Add console prefix after adding to history.\n    args.unshift(name + ':');\n\n    // Add a clone of the args at this point to history.\n    if (history) {\n      history.push([].concat(args));\n    }\n\n    // If there's no console then don't try to output messages, but they will\n    // still be stored in history.\n    if (!window.console) {\n      return;\n    }\n\n    // Was setting these once outside of this function, but containing them\n    // in the function makes it easier to test cases where console doesn't exist\n    // when the module is executed.\n    var fn = window.console[type];\n\n    if (!fn && type === 'debug') {\n      // Certain browsers don't have support for console.debug. For those, we\n      // should default to the closest comparable log.\n      fn = window.console.info || window.console.log;\n    }\n\n    // Bail out if there's no console or if this type is not allowed by the\n    // current logging level.\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\n      return;\n    }\n\n    // IEs previous to 11 log objects uselessly as \"[object Object]\"; so, JSONify\n    // objects and arrays for those less-capable browsers.\n    if (stringify) {\n      args = args.map(function (a) {\n        if (isObject(a) || Array.isArray(a)) {\n          try {\n            return JSON.stringify(a);\n          } catch (x) {\n            return String(a);\n          }\n        }\n\n        // Cast to string before joining, so we get null and undefined explicitly\n        // included in output (as we would in a modern console).\n        return String(a);\n      }).join(' ');\n    }\n\n    // Old IE versions do not allow .apply() for console methods (they are\n    // reported as objects rather than functions).\n    if (!fn.apply) {\n      fn(args);\n    } else {\n      fn[Array.isArray(args) ? 'apply' : 'call'](window.console, args);\n    }\n  };\n};\n\nfunction createLogger$1(name) {\n  // This is the private tracking variable for logging level.\n  var level = 'info';\n\n  // the curried logByType bound to the specific log and history\n  var logByType = void 0;\n\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */\n  var log = function log() {\n    var stringify = log.stringify || IE_VERSION && IE_VERSION < 11;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    logByType('log', level, args, stringify);\n  };\n\n  // This is the logByType helper that the logging methods below use\n  logByType = LogByTypeFactory(name, log);\n\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n  log.createLogger = function (subname) {\n    return createLogger$1(name + ': ' + subname);\n  };\n\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n  log.level = function (lvl) {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error('\"' + lvl + '\" in not a valid log level');\n      }\n      level = lvl;\n    }\n    return level;\n  };\n\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n  log.history = function () {\n    return history ? [].concat(history) : [];\n  };\n\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n  log.history.filter = function (fname) {\n    return (history || []).filter(function (historyItem) {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp('.*' + fname + '.*').test(historyItem[0]);\n    });\n  };\n\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n  log.history.clear = function () {\n    if (history) {\n      history.length = 0;\n    }\n  };\n\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n  log.history.disable = function () {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n  log.history.enable = function () {\n    if (history === null) {\n      history = [];\n    }\n  };\n\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */\n  log.error = function () {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return logByType('error', level, args);\n  };\n\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n  log.warn = function () {\n    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return logByType('warn', level, args);\n  };\n\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n  log.debug = function () {\n    for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return logByType('debug', level, args);\n  };\n\n  return log;\n}\n\n/**\n * @file log.js\n * @module log\n */\nvar log = createLogger$1('VIDEOJS');\nvar createLogger = log.createLogger;\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n/**\n * A safe getComputedStyle with an IE8 fallback.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a null-check to\n * make sure  that the player doesn't break in these cases.\n *\n * @param {Element} el\n *        The element you want the computed style of\n *\n * @param {string} prop\n *        The property name you want\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n *\n * @static\n * @const\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window.getComputedStyle === 'function') {\n    var cs = window.getComputedStyle(el);\n\n    return cs ? cs[prop] : '';\n  }\n\n  return el.currentStyle[prop] || '';\n}\n\nvar _templateObject = taggedTemplateLiteralLoose(['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.'], ['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.']);\n\n/**\n * @file dom.js\n * @module dom\n */\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @param {string} str\n *        The string to check\n *\n * @return {boolean}\n *         - True if the string is non-blank\n *         - False otherwise\n *\n */\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @param {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n *\n */\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @param {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n\n/**\n * Whether the current DOM interface appears to be real.\n *\n * @return {Boolean}\n */\nfunction isReal() {\n  return (\n\n    // Both document and window will never be undefined thanks to `global`.\n    document === window.document &&\n\n    // In IE < 9, DOM methods return \"object\" as their type, so all we can\n    // confidently check is that it exists.\n    typeof document.createElement !== 'undefined'\n  );\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param {Mixed} value\n *        The thing to check\n *\n * @return {boolean}\n *         - True if it is a DOM element\n *         - False otherwise\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *\n */\nfunction isInFrame() {\n\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window.parent !== window.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @param {string} method\n *         The method to create the query with.\n *\n * @return {Function}\n *         The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties.\n *\n * @param {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {String|Element|TextNode|Array|Function} [content]\n *         Contents for the element (see: {@link dom:normalizeContent})\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl() {\n  var tagName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n  var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var content = arguments[3];\n\n  var el = document.createElement(tagName);\n\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName];\n\n    // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log.warn(tsml(_templateObject, propName, val));\n      el.setAttribute(propName, val);\n\n      // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param {Element} el\n *        The element to add text content into\n *\n * @param {string} text\n *        The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a CSS class\n *\n * @param {Element} element\n *        Element to check\n *\n * @param {string} classToCheck\n *        Class name to check for\n *\n * @return {boolean}\n *         - True if the element had the class\n *         - False otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n  return classRegExp(classToCheck).test(element.className);\n}\n\n/**\n * Add a CSS class name to an element\n *\n * @param {Element} element\n *        Element to add class name to.\n *\n * @param {string} classToAdd\n *        Class name to add.\n *\n * @return {Element}\n *         The dom element with the added class name.\n */\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd);\n\n    // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n\n/**\n * Remove a CSS class name from an element\n *\n * @param {Element} element\n *        Element to remove a class name from.\n *\n * @param {string} classToRemove\n *        Class name to remove\n *\n * @return {Element}\n *         The dom element with class name removed.\n */\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n\n/**\n * The callback definition for toggleElClass.\n *\n * @callback Dom~PredicateCallback\n * @param {Element} element\n *        The DOM element of the Component.\n *\n * @param {string} classToToggle\n *        The `className` that wants to be toggled\n *\n * @return {boolean|undefined}\n *         - If true the `classToToggle` will get added to `element`.\n *         - If false the `classToToggle` will get removed from `element`.\n *         - If undefined this callback will be ignored\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param {Element} element\n *        The element to toggle a class name on.\n *\n * @param {string} classToToggle\n *        The class that should be toggled\n *\n * @param {boolean|PredicateCallback} [predicate]\n *        See the return value for {@link Dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n\n  // This CANNOT use `classList` internally because IE does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  }\n\n  // If the necessary class operation matches the current state of the\n  // element, no action is required.\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @param {Element} tag\n *        Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element.\n */\nfunction getAttributes(tag) {\n  var obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but older browsers\n  // won't know about HTML5 boolean attributes that we still read from\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to get the value of\n *\n * @return {string}\n *         value of the attribute\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to set\n *\n * @param {string} value\n *        Value to set the attribute to\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to remove\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text while dragging controls\n */\nfunction blockTextSelection() {\n  document.body.focus();\n  document.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking\n */\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n\n/**\n * The postion of a DOM element on the page.\n *\n * @typedef {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left\n *\n * @property {number} top\n *           Pixels on top\n */\n\n/**\n * Offset Left.\n * getBoundingClientRect technique from\n * John Resig\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param {Element} el\n *        Element from which to get offset\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  var box = void 0;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop;\n\n  // Android sometimes returns slightly off decimal values, so need to round\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n\n/**\n * x and y coordinates for a dom element or mouse pointer\n *\n * @typedef {Object} Dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get pointer position in element\n * Returns an object with x and y coordinates.\n * The base on the coordinates are the bottom left of the element.\n *\n * @param {Element} el\n *        Element on which to get the pointer position on\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {Dom~Coordinates}\n *         A Coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param {Mixed} value\n *        Check if this value is a text node.\n *\n * @return {boolean}\n *         - True if it is a text node\n *         - False otherwise\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param {Element} el\n *        The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but protects\n * from falling into the trap of simply writing to `innerHTML`, which is\n * an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        - String: Normalized into a text node.\n *        - Element/TextNode: Passed through.\n *        - Array: A one-dimensional array of strings, elements, nodes, or functions\n *          (which return single strings, elements, or nodes).\n *        - Function: If the sole argument, is expected to produce a string, element,\n *          node, or array as defined above.\n *\n * @return {Array}\n *         All of the content that was passed in normalized.\n */\nfunction normalizeContent(content) {\n\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param {Element} el\n *        Element to append normalized content to.\n *\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with inserted normalized content.\n *\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if event was a single left click\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {boolean}\n *         - True if a left click\n *         - False if not a left click\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  if (IE_VERSION === 9) {\n    // Ignore IE9\n\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *        A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param {Element|String} [context=document]\n *        A DOM element within which to query. Can also be a selector\n *        string in which case the first matching element will be used\n *        as context. If missing (or no element matches selector), falls\n *        back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nvar $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *           A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param {Element|String} [context=document]\n *           A DOM element within which to query. Can also be a selector\n *           string in which case the first matching element will be used\n *           as context. If missing (or no element matches selector), falls\n *           back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none were found.\n *\n */\nvar $$ = createQuerier('querySelectorAll');\n\n\n\nvar Dom = (Object.freeze || Object)({\n\tisReal: isReal,\n\tisEl: isEl,\n\tisInFrame: isInFrame,\n\tcreateEl: createEl,\n\ttextContent: textContent,\n\tprependTo: prependTo,\n\thasClass: hasClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\ttoggleClass: toggleClass,\n\tsetAttributes: setAttributes,\n\tgetAttributes: getAttributes,\n\tgetAttribute: getAttribute,\n\tsetAttribute: setAttribute,\n\tremoveAttribute: removeAttribute,\n\tblockTextSelection: blockTextSelection,\n\tunblockTextSelection: unblockTextSelection,\n\tgetBoundingClientRect: getBoundingClientRect,\n\tfindPosition: findPosition,\n\tgetPointerPosition: getPointerPosition,\n\tisTextNode: isTextNode,\n\temptyEl: emptyEl,\n\tnormalizeContent: normalizeContent,\n\tappendContent: appendContent,\n\tinsertContent: insertContent,\n\tisSingleLeftClick: isSingleLeftClick,\n\t$: $,\n\t$$: $$\n});\n\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\nvar _guid = 1;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar elData = {};\n\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\nvar elIdAttr = 'vdata' + new Date().getTime();\n\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  }\n\n  // Remove all stored data\n  delete elData[id];\n\n  // Remove the elIdAttr property from the DOM node\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window.event;\n\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n\n    window.addEventListener('test', null, opts);\n    window.removeEventListener('test', null, opts);\n  } catch (e) {\n    // disregard\n  }\n})();\n\n/**\n * Touch events Chrome expects to be passive\n */\nvar passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = { passive: true };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n\n  var handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         - Returns the opposite of `defaultPrevented` if default was prevented\n *         - Otherwise returns undefined\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = { type: event, target: elem };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented) {\n    var targetData = getData(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event Listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\nvar Events = (Object.freeze || Object)({\n\tfixEvent: fixEvent,\n\ton: on,\n\toff: off,\n\ttrigger: trigger,\n\tone: one\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nvar _windowLoaded = false;\nvar videojs$2 = void 0;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nvar autoSetup = function autoSetup() {\n\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs$2.options.autoSetup === false) {\n    return;\n  }\n\n  // One day, when we stop supporting IE8, go back to this, but in the meantime...*hack hack hack*\n  // var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  // var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  // var mediaEls = vids.concat(audios);\n\n  // Because IE8 doesn't support calling slice on a node list, we need to loop\n  // through each list of elements to build up a new, combined list of elements.\n  var vids = document.getElementsByTagName('video');\n  var audios = document.getElementsByTagName('audio');\n  var divs = document.getElementsByTagName('video-js');\n  var mediaEls = [];\n\n  if (vids && vids.length > 0) {\n    for (var i = 0, e = vids.length; i < e; i++) {\n      mediaEls.push(vids[i]);\n    }\n  }\n\n  if (audios && audios.length > 0) {\n    for (var _i = 0, _e = audios.length; _i < _e; _i++) {\n      mediaEls.push(audios[_i]);\n    }\n  }\n\n  if (divs && divs.length > 0) {\n    for (var _i2 = 0, _e2 = divs.length; _i2 < _e2; _i2++) {\n      mediaEls.push(divs[_i2]);\n    }\n  }\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n\n    for (var _i3 = 0, _e3 = mediaEls.length; _i3 < _e3; _i3++) {\n      var mediaEl = mediaEls[_i3];\n\n      // Check if element exists, has getAttribute func.\n      // IE seems to consider typeof el.getAttribute == 'object' instead of\n      // 'function' like expected, at least when loading the player immediately.\n      if (mediaEl && mediaEl.getAttribute) {\n\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs$2(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs$2 = vjs;\n  }\n\n  window.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n\n  style.className = className;\n\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file fn.js\n * @module fn\n */\n/**\n * Bind (a.k.a proxy or Context). A simple method for changing the context of a function\n * It also stores a unique id on the function so it can be easily removed from events.\n *\n * @param {Mixed} context\n *        The object to bind as scope.\n *\n * @param {Function} fn\n *        The function to be bound to a scope.\n *\n * @param {number} [uid]\n *        An optional unique ID for the function to be set\n *\n * @return {Function}\n *         The new function that will be bound into the context given\n */\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  };\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @param  {Function} fn\n *         The function to be throttled.\n *\n * @param  {Number}   wait\n *         The number of milliseconds by which to throttle.\n *\n * @return {Function}\n */\nvar throttle = function throttle(fn, wait) {\n  var last = Date.now();\n\n  var throttled = function throttled() {\n    var now = Date.now();\n\n    if (now - last >= wait) {\n      fn.apply(undefined, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @param  {Function} func\n *         The function to wrap with debounce behavior.\n *\n * @param  {number} wait\n *         The number of milliseconds to wait after the last invocation.\n *\n * @param  {boolean} [immediate]\n *         Whether or not to invoke the function immediately upon creation.\n *\n * @param  {Object} [context=window]\n *         The \"context\" in which the debounced function should debounce. For\n *         example, if this function should be tied to a Video.js player,\n *         the player can be passed here. Alternatively, defaults to the\n *         global `window` object.\n *\n * @return {Function}\n *         A debounced function.\n */\nvar debounce = function debounce(func, wait, immediate) {\n  var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : window;\n\n  var timeout = void 0;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n\n  /* eslint-disable consistent-this */\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n  debounced.cancel = cancel;\n\n  return debounced;\n};\n\n/**\n * @file src/js/event-target.js\n */\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nvar EventTarget = function EventTarget() {};\n\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\nEventTarget.prototype.allowedEvents_ = {};\n\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener alialing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event;\n\n  if (typeof event === 'string') {\n    event = { type: type };\n  }\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nvar isValidEventType = function isValidEventType(type) {\n  return (\n    // The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target = void 0;\n  var type = void 0;\n  var listener = void 0;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n\n  listener = bind(self, listener);\n\n  return { isTargetingSelf: isTargetingSelf, target: target, type: type, listener: listener };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilites to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nvar EventedMixin = {\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on$$1() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      };\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one$$1() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener;\n\n    // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        for (var _len3 = arguments.length, largs = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        _this2.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$$1(targetOrType, typeOrListener, listener) {\n\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener);\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @returns {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {String} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var eventBusKey = options.eventBusKey;\n\n  // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error('The eventBusKey \"' + eventBusKey + '\" does not refer to an element.');\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', { className: 'vjs-event-bus' });\n  }\n\n  assign(target, EventedMixin);\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', function () {\n    target.off();\n    window.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nvar StatefulMixin = {\n\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @returns {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes = void 0;\n\n    each(stateUpdates, function (value, key) {\n\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @returns {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n/**\n * Deep-merge one or more options objects, recursively merging **only** plain\n * object properties.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @returns {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component = function () {\n\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    classCallCheck(this, Component);\n\n\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = mergeOptions({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = mergeOptions(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n\n      this.id_ = id + '_component_' + newGUID();\n    }\n\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, { eventBusKey: this.el_ ? 'el_' : null });\n    }\n    stateful(this, this.constructor.defaultState);\n\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready);\n    // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Component.prototype.dispose = function dispose() {\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({ type: 'dispose', bubbles: false });\n\n    // Dispose all children.\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  };\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n\n\n  Component.prototype.player = function player() {\n    return this.player_;\n  };\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Component.prototype.options = function options(obj) {\n    log.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  };\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n\n\n  Component.prototype.el = function el() {\n    return this.el_;\n  };\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Component.prototype.createEl = function createEl$$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  };\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n\n\n  Component.prototype.localize = function localize(string, tokens) {\n    var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : string;\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  };\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n\n\n  Component.prototype.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  };\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n\n\n  Component.prototype.id = function id() {\n    return this.id_;\n  };\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n\n\n  Component.prototype.name = function name() {\n    return this.name_;\n  };\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n\n\n  Component.prototype.children = function children() {\n    return this.children_;\n  };\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n\n\n  Component.prototype.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  };\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n\n\n  Component.prototype.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    return this.childNameIndex_[name];\n  };\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n\n\n  Component.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.children_.length;\n\n    var component = void 0;\n    var componentName = void 0;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n\n      var componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error('Component ' + componentClassName + ' does not exist');\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n\n    this.children_.splice(index, 0, component);\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  };\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n\n\n  Component.prototype.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  };\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n\n\n  Component.prototype.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = _this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      var workingChildren = void 0;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name = void 0;\n        var opts = void 0;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return { name: name, opts: opts };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  };\n\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n\n\n  Component.prototype.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  };\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.ready = function ready(fn) {\n    var sync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  };\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n\n\n  Component.prototype.triggerReady = function triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  };\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$ = function $$$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  };\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$$ = function $$$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  };\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n\n\n  Component.prototype.hasClass = function hasClass$$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  };\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n\n\n  Component.prototype.addClass = function addClass$$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  };\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n\n\n  Component.prototype.removeClass = function removeClass$$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  };\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n\n\n  Component.prototype.toggleClass = function toggleClass$$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  };\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n\n\n  Component.prototype.show = function show() {\n    this.removeClass('vjs-hidden');\n  };\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n\n\n  Component.prototype.hide = function hide() {\n    this.addClass('vjs-hidden');\n  };\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  };\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  };\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n\n\n  Component.prototype.getAttribute = function getAttribute$$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n\n\n  Component.prototype.setAttribute = function setAttribute$$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  };\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n\n\n  Component.prototype.removeAttribute = function removeAttribute$$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  };\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  };\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n\n\n  Component.prototype.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  };\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n\n\n  Component.prototype.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  };\n\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n\n\n  Component.prototype.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window.getComputedStyle === 'function') {\n      var computedStyle = window.getComputedStyle(this.el_);\n\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    }\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs on IE8 and wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0) {\n      var rule = 'offset' + toTitleCase(widthOrHeight);\n\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  };\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n\n\n  Component.prototype.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  };\n\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n\n\n  Component.prototype.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  };\n\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n\n\n  Component.prototype.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  };\n\n  /**\n   * Set the focus to this component\n   */\n\n\n  Component.prototype.focus = function focus() {\n    this.el_.focus();\n  };\n\n  /**\n   * Remove the focus from this component\n   */\n\n\n  Component.prototype.blur = function blur() {\n    this.el_.blur();\n  };\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n\n\n  Component.prototype.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    var tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    var touchTimeThreshold = 200;\n\n    var couldBeTap = void 0;\n\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = new Date().getTime();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = new Date().getTime() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  };\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n\n\n  Component.prototype.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    var report = bind(this.player(), this.player().reportUserActivity);\n\n    var touchHolding = void 0;\n\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  };\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n\n\n  Component.prototype.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId, disposeFn;\n\n    fn = bind(this, fn);\n\n    timeoutId = window.setTimeout(function () {\n      _this2.off('dispose', disposeFn);\n      fn();\n    }, timeout);\n\n    disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.on('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n\n\n  Component.prototype.clearTimeout = function clearTimeout(timeoutId) {\n    window.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.off('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n\n\n  Component.prototype.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n\n    var intervalId = window.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.on('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n\n\n  Component.prototype.clearInterval = function clearInterval(intervalId) {\n    window.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.off('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n\n\n  Component.prototype.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id, disposeFn;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n\n      id = window.requestAnimationFrame(function () {\n        _this4.off('dispose', disposeFn);\n        fn();\n      });\n\n      disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = 'vjs-raf-' + id;\n      this.on('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.setTimeout(fn, 1000 / 60);\n  };\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n\n\n  Component.prototype.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = 'vjs-raf-' + id;\n\n      this.off('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.clearTimeout(id);\n  };\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error('Illegal component name, \"' + name + '\"; must be a non-empty string.');\n    }\n\n    var Tech = Component.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason = void 0;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error('Illegal component, \"' + name + '\"; ' + reason + '.');\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n\n    return ComponentToRegister;\n  };\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window.requestAnimationFrame === 'function' && typeof window.cancelAnimationFrame === 'function';\n\nComponent.registerComponent('Component', Component);\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @function time-ranges:indexFunction\n *\n * @param {number} [index=0]\n *        The range number to return the time for.\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n * @depricated index must be set to a value, in the future this will throw an error.\n */\n\n/**\n * An object that contains ranges of time for various reasons.\n *\n * @typedef {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this Object\n *\n * @property {time-ranges:indexFunction} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {time-ranges:indexFunction} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {number} index\n *        The index to check\n *\n * @param {number} maxIndex\n *        The maximum possible index\n *\n * @throws {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error('Failed to execute \\'' + fnName + '\\' on \\'TimeRanges\\': The index provided (' + index + ') is non-numeric or out of bounds (0-' + maxIndex + ').');\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {string} valueIndex\n *        The proprety that should be used to get the time. should be 'start' or 'end'\n *\n * @param {Array} ranges\n *        An array of time ranges\n *\n * @param {Array} [rangeIndex=0]\n *        The index to start the search at\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n *\n * @depricated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @param {Array} [ranges]\n *        An array of time ranges.\n */\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n\n/**\n * Should create a fake `TimeRange` object which mimics an HTML5 time range instance.\n *\n * @param {number|Array} start\n *        The start of a single range or an array of ranges\n *\n * @param {number} end\n *        The end of a single range.\n *\n * @private\n */\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start = void 0;\n  var end = void 0;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nvar FullscreenApi = {};\n\n// browser API methods\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Old WebKit (Safari 5.1)\n['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'],\n// Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\n\nvar specApi = apiMap[0];\nvar browserApi = void 0;\n\n// determine the supported set of functions\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n}\n\n/**\n * @file media-error.js\n */\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_CUSTOM\n * @property {string} 2 - MEDIA_ERR_ABORTED\n * @property {string} 3 - MEDIA_ERR_NETWORK\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n// Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum;\n  // values should be accessible on both the class and instance\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n}\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {Boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nvar textTracksToJson = function textTracksToJson(tech) {\n\n  var trackEls = tech.$$('track');\n\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n\n  return tech.textTracks();\n};\n\nvar textTrackConverter = { textTracksToJson: textTracksToJson, jsonToTextTracks: jsonToTextTracks, trackToJson_: trackToJson_ };\n\n/**\n * @file modal-dialog.js\n */\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\nvar ESC = 27;\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog = function (_Component) {\n  inherits(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    classCallCheck(this, ModalDialog);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n    _this.content(_this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + '-content'\n    }, {\n      role: 'document'\n    });\n\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + '-description vjs-control-text',\n      id: _this.el().getAttribute('aria-describedby')\n    });\n\n    textContent(_this.descEl_, _this.description());\n    _this.el_.appendChild(_this.descEl_);\n    _this.el_.appendChild(_this.contentEl_);\n    return _this;\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  ModalDialog.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + '_description',\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  ModalDialog.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ModalDialog.prototype.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + ' vjs-hidden ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles `keydown` events on the document, looking for ESC, which closes\n   * the modal.\n   *\n   * @param {EventTarget~Event} e\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyPress = function handleKeyPress(e) {\n    if (e.which === ESC && this.closeable()) {\n      this.close();\n    }\n  };\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n\n\n  ModalDialog.prototype.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  };\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n\n\n  ModalDialog.prototype.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  };\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n\n\n  ModalDialog.prototype.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      if (this.closeable()) {\n        this.on(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n      }\n\n      // Hide controls and note if they were enabled.\n      this.hadControls_ = player.controls();\n      player.controls(false);\n\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  };\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n\n\n  ModalDialog.prototype.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  };\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n\n\n  ModalDialog.prototype.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n    var player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    if (this.closeable()) {\n      this.off(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n    }\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  };\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n\n\n  ModalDialog.prototype.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', { controlText: 'Close Modal Dialog' });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  };\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n\n\n  ModalDialog.prototype.fill = function fill() {\n    this.fillWith(this.content());\n  };\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n\n\n  ModalDialog.prototype.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n\n    /**\n     * Fired just before a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#beforemodalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  };\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n\n\n  ModalDialog.prototype.empty = function empty() {\n    /**\n     * Fired just before a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#beforemodalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n     * Fired just after a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#modalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalempty');\n  };\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n\n\n  ModalDialog.prototype.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  };\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n\n      this.focus();\n\n      this.on(document, 'keydown', this.handleKeyDown);\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n\n    this.off(document, 'keydown', this.handleKeyDown);\n  };\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyDown = function handleKeyDown(event) {\n    // exit early if it isn't a tab key\n    if (event.which !== 9) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex = void 0;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window.HTMLAnchorElement || child instanceof window.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window.HTMLInputElement || child instanceof window.HTMLSelectElement || child instanceof window.HTMLTextAreaElement || child instanceof window.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window.HTMLIFrameElement || child instanceof window.HTMLObjectElement || child instanceof window.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\n\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList = function (_EventTarget) {\n  inherits(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @param {Object} [list]\n   *        The child object with inheritance done manually for ie8.\n   *\n   * @abstract\n   */\n  function TrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    var _ret;\n\n    var list = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    classCallCheck(this, TrackList);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    if (!list) {\n      list = _this; // eslint-disable-line\n      if (IS_IE8) {\n        list = document.createElement('custom');\n        for (var prop in TrackList.prototype) {\n          if (prop !== 'constructor') {\n            list[prop] = TrackList.prototype[prop];\n          }\n        }\n      }\n    }\n\n    list.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(list, 'length', {\n      get: function get$$1() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      list.addTrack(tracks[i]);\n    }\n\n    // must return the object, as for ie8 it will not be this\n    // but a reference to a document object\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  TrackList.prototype.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track: track,\n        type: 'addtrack'\n      });\n    }\n  };\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n\n\n  TrackList.prototype.removeTrack = function removeTrack(rtrack) {\n    var track = void 0;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track: track,\n      type: 'removetrack'\n    });\n  };\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {String} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n\n\n  TrackList.prototype.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\nvar AudioTrackList = function (_TrackList) {\n  inherits(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList() {\n    var _this, _ret;\n\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, AudioTrackList);\n\n    var list = void 0;\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    // IE8 forces us to implement inheritance ourselves\n    // as it does not support Object.defineProperty properly\n    if (IS_IE8) {\n      list = document.createElement('custom');\n      for (var prop in TrackList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TrackList.prototype[prop];\n        }\n      }\n      for (var _prop in AudioTrackList.prototype) {\n        if (_prop !== 'constructor') {\n          list[_prop] = AudioTrackList.prototype[_prop];\n        }\n      }\n    }\n\n    list = (_this = possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n    list.changing_ = false;\n\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  AudioTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * @file video-track-list.js\n */\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\nvar VideoTrackList = function (_TrackList) {\n  inherits(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList() {\n    var _this, _ret;\n\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, VideoTrackList);\n\n    var list = void 0;\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    // IE8 forces us to implement inheritance ourselves\n    // as it does not support Object.defineProperty properly\n    if (IS_IE8) {\n      list = document.createElement('custom');\n      for (var prop in TrackList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TrackList.prototype[prop];\n        }\n      }\n      for (var _prop in VideoTrackList.prototype) {\n        if (_prop !== 'constructor') {\n          list[_prop] = VideoTrackList.prototype[_prop];\n        }\n      }\n    }\n\n    list = (_this = possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n    list.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(list, 'selectedIndex', {\n      get: function get$$1() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n        return -1;\n      },\n      set: function set$$1() {}\n    });\n\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  VideoTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', function () {\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * @file text-track-list.js\n */\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList = function (_TrackList) {\n  inherits(TextTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {TextTrack[]} [tracks=[]]\n   *        A list of `TextTrack` to instantiate the list with.\n   */\n  function TextTrackList() {\n    var _this, _ret;\n\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, TextTrackList);\n\n    var list = void 0;\n\n    // IE8 forces us to implement inheritance ourselves\n    // as it does not support Object.defineProperty properly\n    if (IS_IE8) {\n      list = document.createElement('custom');\n      for (var prop in TrackList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TrackList.prototype[prop];\n        }\n      }\n      for (var _prop in TextTrackList.prototype) {\n        if (_prop !== 'constructor') {\n          list[_prop] = TextTrackList.prototype[_prop];\n        }\n      }\n    }\n\n    list = (_this = possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  TextTrackList.prototype.addTrack = function addTrack(track) {\n    _TrackList.prototype.addTrack.call(this, track);\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', bind(this, function () {\n      this.trigger('change');\n    }));\n\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', bind(this, function () {\n        this.trigger('selectedlanguagechange');\n      }));\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\n\nvar HtmlTrackElementList = function () {\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList() {\n    var trackElements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, HtmlTrackElementList);\n\n    var list = this; // eslint-disable-line\n\n    if (IS_IE8) {\n      list = document.createElement('custom');\n\n      for (var prop in HtmlTrackElementList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = HtmlTrackElementList.prototype[prop];\n        }\n      }\n    }\n\n    list.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(list, 'length', {\n      get: function get$$1() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      list.addTrackElement_(trackElements[i]);\n    }\n\n    if (IS_IE8) {\n      return list;\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  };\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_ = void 0;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n\n        break;\n      }\n    }\n\n    return trackElement_;\n  };\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        this.trackElements_.splice(i, 1);\n\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\n\nvar TextTrackCueList = function () {\n\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    classCallCheck(this, TextTrackCueList);\n\n    var list = this; // eslint-disable-line\n\n    if (IS_IE8) {\n      list = document.createElement('custom');\n\n      for (var prop in TextTrackCueList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TextTrackCueList.prototype[prop];\n        }\n      }\n    }\n\n    TextTrackCueList.prototype.setCues_.call(list, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(list, 'length', {\n      get: function get$$1() {\n        return this.length_;\n      }\n    });\n\n    if (IS_IE8) {\n      return list;\n    }\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  TextTrackCueList.prototype.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get$$1() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  };\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n\n\n  TextTrackCueList.prototype.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track = function (_EventTarget) {\n  inherits(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track() {\n    var _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, Track);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var track = _this; // eslint-disable-line\n\n    if (IS_IE8) {\n      track = document.createElement('custom');\n      for (var prop in Track.prototype) {\n        if (prop !== 'constructor') {\n          track[prop] = Track.prototype[prop];\n        }\n      }\n    }\n\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(track, key, {\n        get: function get$$1() {\n          return trackProps[key];\n        },\n        set: function set$$1() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _ret = track, possibleConstructorReturn(_this, _ret);\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @param  {String} url\n *         The url to parse\n *\n * @return {url:URLObject}\n *         An object of url details\n */\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  var a = document.createElement('a');\n\n  a.href = url;\n\n  // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div = void 0;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = '<a href=\"' + url + '\"></a>';\n    a = div.firstChild;\n    // prevent the div from affecting layout\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  }\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n\n/**\n * Get absolute version of relative URL. Used to tell flash correct URL.\n *\n *\n * @param  {string} url\n *         URL to make absolute\n *\n * @return {string}\n *         Absolute URL\n *\n * @see http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n\n    div.innerHTML = '<a href=\"' + url + '\">x</a>';\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @param {string} path\n *        The fileName path like '/path/to/file.mp4'\n *\n * @returns {string}\n *          The extension in lower case or an empty string if no\n *          extension could be found.\n */\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @param {string} url\n *        The url to check.\n *\n * @return {boolean}\n *         Whether it is a cross domain request or not.\n */\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window.location;\n  var urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n\n  return crossOrigin;\n};\n\nvar Url = (Object.freeze || Object)({\n\tparseUrl: parseUrl,\n\tgetAbsoluteURL: getAbsoluteURL,\n\tgetFileExtension: getFileExtension,\n\tisCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window.WebVTT.Parser(window, window.vttjs, window.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window.console && window.console.groupCollapsed) {\n      window.console.groupCollapsed('Text Track parsing errors for ' + track.src);\n    }\n    errors.forEach(function (error) {\n      return log.error(error);\n    });\n    if (window.console && window.console.groupEnd) {\n      window.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specifed url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  xhr(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log.error(err, response);\n    }\n\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window.WebVTT !== 'function') {\n      if (track.tech_) {\n        var loadHandler = function loadHandler() {\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.on('vttjsloaded', loadHandler);\n        track.tech_.on('vttjserror', function () {\n          log.error('vttjs failed to load, stopping trying to process ' + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\nvar TextTrack = function (_Track) {\n  inherits(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack() {\n    var _this, _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, TextTrack);\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings['default'];\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n    // on IE8 this will be a document element\n    // for every other browser this will be a normal object\n    var tt = (_this = possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n\n    tt.tech_ = settings.tech;\n\n    if (IS_IE8) {\n      for (var prop in TextTrack.prototype) {\n        if (prop !== 'constructor') {\n          tt[prop] = TextTrack.prototype[prop];\n        }\n      }\n    }\n\n    tt.cues_ = [];\n    tt.activeCues_ = [];\n\n    var cues = new TextTrackCueList(tt.cues_);\n    var activeCues = new TextTrackCueList(tt.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(tt, function () {\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to it's nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      tt.tech_.ready(function () {\n        tt.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    /**\n     * @memberof TextTrack\n     * @member {boolean} default\n     *         If this track was set to be on or off by default. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n    Object.defineProperty(tt, 'default', {\n      get: function get$$1() {\n        return default_;\n      },\n      set: function set$$1() {}\n    });\n\n    /**\n     * @memberof TextTrack\n     * @member {string} mode\n     *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n     *         not be set if setting to an invalid mode.\n     * @instance\n     *\n     * @fires TextTrack#modechange\n     */\n    Object.defineProperty(tt, 'mode', {\n      get: function get$$1() {\n        return mode;\n      },\n      set: function set$$1(newMode) {\n        var _this2 = this;\n\n        if (!TextTrackMode[newMode]) {\n          return;\n        }\n        mode = newMode;\n        if (mode !== 'disabled') {\n\n          this.tech_.ready(function () {\n            _this2.tech_.on('timeupdate', timeupdateHandler);\n          }, true);\n        } else {\n          this.tech_.off('timeupdate', timeupdateHandler);\n        }\n        /**\n         * An event that fires when mode changes on this track. This allows\n         * the TextTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec!\n         *\n         * @event TextTrack#modechange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('modechange');\n      }\n    });\n\n    /**\n     * @memberof TextTrack\n     * @member {TextTrackCueList} cues\n     *         The text track cue list for this TextTrack.\n     * @instance\n     */\n    Object.defineProperty(tt, 'cues', {\n      get: function get$$1() {\n        if (!this.loaded_) {\n          return null;\n        }\n\n        return cues;\n      },\n      set: function set$$1() {}\n    });\n\n    /**\n     * @memberof TextTrack\n     * @member {TextTrackCueList} activeCues\n     *         The list text track cues that are currently active for this TextTrack.\n     * @instance\n     */\n    Object.defineProperty(tt, 'activeCues', {\n      get: function get$$1() {\n        if (!this.loaded_) {\n          return null;\n        }\n\n        // nothing to do\n        if (this.cues.length === 0) {\n          return activeCues;\n        }\n\n        var ct = this.tech_.currentTime();\n        var active = [];\n\n        for (var i = 0, l = this.cues.length; i < l; i++) {\n          var cue = this.cues[i];\n\n          if (cue.startTime <= ct && cue.endTime >= ct) {\n            active.push(cue);\n          } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n            active.push(cue);\n          }\n        }\n\n        changed = false;\n\n        if (active.length !== this.activeCues_.length) {\n          changed = true;\n        } else {\n          for (var _i = 0; _i < active.length; _i++) {\n            if (this.activeCues_.indexOf(active[_i]) === -1) {\n              changed = true;\n            }\n          }\n        }\n\n        this.activeCues_ = active;\n        activeCues.setCues_(this.activeCues_);\n\n        return activeCues;\n      },\n\n\n      // /!\\ Keep this setter empty (see the timeupdate handler above)\n      set: function set$$1() {}\n    });\n\n    if (settings.src) {\n      tt.src = settings.src;\n      loadTrack(settings.src, tt);\n    } else {\n      tt.loaded_ = true;\n    }\n\n    return _ret = tt, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  TextTrack.prototype.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window.vttjs && !(originalCue instanceof window.vttjs.VTTCue)) {\n      cue = new window.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  };\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n\n\n  TextTrack.prototype.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack = function (_Track) {\n  inherits(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack() {\n    var _this, _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, AudioTrack);\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    // on IE8 this will be a document element\n    // for every other browser this will be a normal object\n    var track = (_this = possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n    var enabled = false;\n\n    if (IS_IE8) {\n      for (var prop in AudioTrack.prototype) {\n        if (prop !== 'constructor') {\n          track[prop] = AudioTrack.prototype[prop];\n        }\n      }\n    }\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(track, 'enabled', {\n      get: function get$$1() {\n        return enabled;\n      },\n      set: function set$$1(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      track.enabled = settings.enabled;\n    }\n    track.loaded_ = true;\n\n    return _ret = track, possibleConstructorReturn(_this, _ret);\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack = function (_Track) {\n  inherits(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack() {\n    var _this, _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, VideoTrack);\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n\n    // on IE8 this will be a document element\n    // for every other browser this will be a normal object\n    var track = (_this = possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n    var selected = false;\n\n    if (IS_IE8) {\n      for (var prop in VideoTrack.prototype) {\n        if (prop !== 'constructor') {\n          track[prop] = VideoTrack.prototype[prop];\n        }\n      }\n    }\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(track, 'selected', {\n      get: function get$$1() {\n        return selected;\n      },\n      set: function set$$1(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      track.selected = settings.selected;\n    }\n\n    return _ret = track, possibleConstructorReturn(_this, _ret);\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @file html-track-element.js\n */\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement = function (_EventTarget) {\n  inherits(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, HTMLTrackElement);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var readyState = void 0;\n    var trackElement = _this; // eslint-disable-line\n\n    if (IS_IE8) {\n      trackElement = document.createElement('custom');\n\n      for (var prop in HTMLTrackElement.prototype) {\n        if (prop !== 'constructor') {\n          trackElement[prop] = HTMLTrackElement.prototype[prop];\n        }\n      }\n    }\n\n    var track = new TextTrack(options);\n\n    trackElement.kind = track.kind;\n    trackElement.src = track.src;\n    trackElement.srclang = track.language;\n    trackElement.label = track.label;\n    trackElement['default'] = track['default'];\n\n    /**\n     * @memberof HTMLTrackElement\n     * @member {HTMLTrackElement~ReadyState} readyState\n     *         The current ready state of the track element.\n     * @instance\n     */\n    Object.defineProperty(trackElement, 'readyState', {\n      get: function get$$1() {\n        return readyState;\n      }\n    });\n\n    /**\n     * @memberof HTMLTrackElement\n     * @member {TextTrack} track\n     *         The underlying TextTrack object.\n     * @instance\n     *\n     */\n    Object.defineProperty(trackElement, 'track', {\n      get: function get$$1() {\n        return track;\n      }\n    });\n\n    readyState = NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      trackElement.trigger({\n        type: 'load',\n        target: trackElement\n      });\n    });\n\n    if (IS_IE8) {\n      var _ret;\n\n      return _ret = trackElement, possibleConstructorReturn(_this, _ret);\n    }\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\n\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + 'Tracks';\n  NORMAL[type].privateName = type + 'Tracks_';\n});\n\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\n\nvar ALL = mergeOptions(NORMAL, REMOTE);\n\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  var tracks = self.textTracks();\n\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n\n  var track = new ALL.text.TrackClass(options);\n\n  tracks.addTrack(track);\n\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\nvar Tech = function (_Component) {\n  inherits(Tech, _Component);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Tech() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ready = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    classCallCheck(this, Tech);\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.hasStarted_ = false;\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options['native' + track + 'Tracks'] === false) {\n        _this['featuresNative' + track + 'Tracks'] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n    return _this;\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  Tech.prototype.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  };\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n\n\n  Tech.prototype.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n\n\n  Tech.prototype.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n\n    this.off('durationchange', this.onDurationChange);\n  };\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n\n\n  Tech.prototype.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  };\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n\n\n  Tech.prototype.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  };\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n\n  Tech.prototype.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  };\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n\n\n  Tech.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n\n\n  Tech.prototype.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  };\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n\n\n  Tech.prototype.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  };\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n\n\n  Tech.prototype.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n  };\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Tech.prototype.dispose = function dispose() {\n\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n\n\n  Tech.prototype.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(function (type) {\n      var list = _this3[type + 'Tracks']() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  };\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n\n\n  Tech.prototype.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n\n      this.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.reset = function reset() {};\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n\n\n  Tech.prototype.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  };\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks wether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n\n\n  Tech.prototype.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n    return createTimeRanges();\n  };\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n\n\n  Tech.prototype.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    }\n  };\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n\n\n  Tech.prototype.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n     *\n     * @event Tech#audiotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n     *\n     * @event Tech#videotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n     *\n     * @event Tech#texttrackchange\n     * @type {EventTarget~Event}\n     */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + 'trackchange');\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  };\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n\n\n  Tech.prototype.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document.body.contains(this.el())) {\n\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      var script = document.createElement('script');\n\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.12.4/vtt.min.js';\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  };\n\n  /**\n   * Emulate texttracks\n   *\n   */\n\n\n  Tech.prototype.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Tech.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  };\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Tech.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n\n\n  Tech.prototype.addRemoteTextTrack = function addRemoteTextTrack() {\n    var _this7 = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var manualCleanup = arguments[1];\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n\n\n  Tech.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  };\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPoster = function setPoster() {};\n\n  /**\n   * A method to check for the presence of the 'playsinine' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.playsinline = function playsinline() {};\n\n  /**\n   * A method to set or unset the 'playsinine' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPlaysinline = function setPlaysinline() {};\n\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the tech can support the given source\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  };\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  };\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error('Tech ' + name + ' must be a Tech');\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n\n    Tech.techs_[name] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  };\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requsted.\n   */\n\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window && window.videojs && window.videojs[name]) {\n      log.warn('The ' + name + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');\n      return window.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating wether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\nTech.prototype.featuresMuteControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating wether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  var deferrable = ['seekable', 'seeking', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log.error('No source hander found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.on('dispose', this.disposeSourceHandler);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\nvar middlewares = {};\nvar middlewareInstances = {};\n\nvar TERMINATOR = {};\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\n\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n */\nfunction get$1(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middlware from left to right to the tech.\n */\nfunction set$1(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the method\n * on each middleware from left to right.\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n */\nfunction mediate(middleware, tech, method) {\n  var arg = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR;\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n\n  executeRight(middleware, method, returnValue, terminated);\n\n  return returnValue;\n}\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1\n};\n\nvar allowedSetters = {\n  setCurrentTime: 1\n};\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var middleware = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var next = arguments[2];\n  var player = arguments[3];\n  var acc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  var lastRun = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var mwFactory = middleware[0],\n      mwrest = middleware.slice(1);\n\n  // if mwFactory is a string, then we're at a fork in the road\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory);\n\n    // if setSource isn't present, implicitly select this middleware\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL'\n};\n\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\nvar getMimetype = function getMimetype() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n\n  return mimetype || '';\n};\n\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  }\n\n  // 1. check for the type in the `source` cache\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  }\n\n  // 2. see if we have this source in our `currentSources` cache\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  }\n\n  // 3. look for the src url in source elements and use the type there\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  }\n\n  // 4. finally fallback to our list of mime types based on src url extension\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({ src: src })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n\n/**\n * @file loader.js\n */\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader = function (_Component) {\n  inherits(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value stroe of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    classCallCheck(this, MediaLoader);\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({ createEl: false }, options);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_, ready));\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file button.js\n */\n/**\n * Clickable Component which is clickable or keyboard actionable,\n * but is not a native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent = function (_Component) {\n  inherits(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    classCallCheck(this, ClickableComponent);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.emitTapEvents();\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createEl = function createEl$$1() {\n    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log.error('Creating a ClickableComponent with an HTML element of ' + tag + ' is not supported; use a Button instead.');\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  ClickableComponent.prototype.dispose = function dispose() {\n    // remove controlTextEl_ on dipose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a control text element on this `Component`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n\n    return this.controlTextEl_;\n  };\n\n  /**\n   * Get or set the localize text to use for the controls on the `Component`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  ClickableComponent.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.el();\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ClickableComponent.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-control vjs-button ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Enable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('focus', this.handleFocus);\n      this.on('blur', this.handleBlur);\n    }\n  };\n\n  /**\n   * Disable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n  };\n\n  /**\n   * This gets called when a `ClickableComponent` gets:\n   * - Clicked (via the `click` event, listening starts in the constructor)\n   * - Tapped (via the `tap` event, listening starts in the constructor)\n   * - The following things happen in order:\n   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\n   *      `ClickableComponent`.\n   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\n   *      {@link ClickableComponent#handleKeyPress}.\n   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\n   *      the space or enter key.\n   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\n   *      event as a parameter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n\n\n  ClickableComponent.prototype.handleClick = function handleClick(event) {};\n\n  /**\n   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  ClickableComponent.prototype.handleFocus = function handleFocus(event) {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when this ClickableComponent has focus and a key gets pressed down. By\n   * default it will call `this.handleClick` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  ClickableComponent.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.trigger('click');\n    } else if (_Component.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  /**\n   * Called when a `ClickableComponent` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  ClickableComponent.prototype.handleBlur = function handleBlur(event) {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage = function (_ClickableComponent) {\n  inherits(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    classCallCheck(this, PosterImage);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.update();\n    player.on('posterchange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n    _ClickableComponent.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  PosterImage.prototype.createEl = function createEl$$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n\n    // To ensure the poster image resizes while maintaining its original aspect\n    // ratio, use a div with `background-size` when available. For browsers that\n    // do not support `background-size` (e.g. IE8), fall back on using a regular\n    // img element.\n    if (!BACKGROUND_SIZE_SUPPORTED) {\n      this.fallbackImg_ = createEl('img');\n      el.appendChild(this.fallbackImg_);\n    }\n\n    return el;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n\n\n  PosterImage.prototype.update = function update(event) {\n    var url = this.player().poster();\n\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.setSrc = function setSrc(url) {\n    if (this.fallbackImg_) {\n      this.fallbackImg_.src = url;\n    } else {\n      var backgroundImage = '';\n\n      // Any falsey values should stay as an empty string, otherwise\n      // this will throw an extra error\n      if (url) {\n        backgroundImage = 'url(\"' + url + '\")';\n      }\n\n      this.el_.style.backgroundImage = backgroundImage;\n    }\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n\n\n  PosterImage.prototype.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\nfunction constructColor(color, opacity) {\n  var hex = void 0;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\nvar TextTrackDisplay = function (_Component) {\n  inherits(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    classCallCheck(this, TextTrackDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options, ready));\n\n    var updateDisplayHandler = bind(_this, _this.updateDisplay);\n\n    player.on('loadstart', bind(_this, _this.toggleDisplay));\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadstart', bind(_this, _this.preselectTrack));\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind(_this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n\n      if (window.addEventListener) {\n        window.addEventListener('orientationchange', updateDisplayHandler);\n      }\n      player.on('dispose', function () {\n        return window.removeEventListener('orientationchange', updateDisplayHandler);\n      });\n\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  TextTrackDisplay.prototype.preselectTrack = function preselectTrack() {\n    var modes = { captions: 1, subtitles: 1 };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc = void 0;\n    var firstCaptions = void 0;\n    var preferredTrack = void 0;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language === track.language) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track['default']) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precendence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  };\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n\n\n  TextTrackDisplay.prototype.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TextTrackDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  };\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n\n\n  TextTrackDisplay.prototype.clearDisplay = function clearDisplay() {\n    if (typeof window.WebVTT === 'function') {\n      window.WebVTT.processCues(window, [], this.el_);\n    }\n  };\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n\n\n  TextTrackDisplay.prototype.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n\n    this.clearDisplay();\n\n    // Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var track = tracks[i];\n\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  };\n\n  /**\n   * Add an {@link Texttrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack} track\n   *        Text track object to be added to the list.\n   */\n\n\n  TextTrackDisplay.prototype.updateForTrack = function updateForTrack(track) {\n    if (typeof window.WebVTT !== 'function' || !track.activeCues) {\n      return;\n    }\n\n    var cues = [];\n\n    for (var _i = 0; _i < track.activeCues.length; _i++) {\n      cues.push(track.activeCues[_i]);\n    }\n\n    window.WebVTT.processCues(window, cues, this.el_);\n\n    if (!this.player_.textTrackSettings) {\n      return;\n    }\n\n    var overrides = this.player_.textTrackSettings.getValues();\n\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = '2px 2px 3px ' + darkGray + ', 2px 2px 4px ' + darkGray + ', 2px 2px 5px ' + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + darkGray + ', 2px 2px ' + darkGray + ', 3px 3px ' + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + lightGray + ', 0 1px ' + lightGray + ', -1px -1px ' + darkGray + ', 0 -1px ' + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = '0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window.parseFloat(cueDiv.style.fontSize);\n\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner = function (_Component) {\n  inherits(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    classCallCheck(this, LoadingSpinner);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  LoadingSpinner.prototype.createEl = function createEl$$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button = function (_ClickableComponent) {\n  inherits(Button, _ClickableComponent);\n\n  function Button() {\n    classCallCheck(this, Button);\n    return possibleConstructorReturn(this, _ClickableComponent.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  Button.prototype.createEl = function createEl(tag) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    tag = 'button';\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = assign({\n\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Button.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var className = this.constructor.name;\n\n    log.warn('Adding an actionable (user controllable) child to a Button (' + className + ') is not supported; use a ClickableComponent instead.');\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component.prototype.addChild.call(this, child, options);\n  };\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n\n\n  Button.prototype.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n    this.el_.removeAttribute('disabled');\n  };\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n\n\n  Button.prototype.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n    this.el_.setAttribute('disabled', 'disabled');\n  };\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n\n\n  Button.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.\n    if (event.which === 32 || event.which === 13) {\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    _ClickableComponent.prototype.handleKeyPress.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton = function (_Button) {\n  inherits(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    classCallCheck(this, BigPlayButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  BigPlayButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  };\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  BigPlayButton.prototype.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  BigPlayButton.prototype.handleKeyPress = function handleKeyPress(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyPress.call(this, event);\n  };\n\n  BigPlayButton.prototype.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\n\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton = function (_Button) {\n  inherits(CloseButton, _Button);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function CloseButton(player, options) {\n    classCallCheck(this, CloseButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CloseButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-close-button ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when this will be\n   * triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n\n\n  CloseButton.prototype.handleClick = function handleClick(event) {\n\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({ type: 'close', bubbles: false });\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle = function (_Button) {\n  inherits(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    classCallCheck(this, PlayToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'play', _this.handlePlay);\n    _this.on(player, 'pause', _this.handlePause);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlayToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-play-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlayToggle.prototype.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n\n\n  PlayToggle.prototype.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  };\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n\n\n  PlayToggle.prototype.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.controlText('Pause');\n  };\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n\n\n  PlayToggle.prototype.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.controlText('Play');\n  };\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  PlayToggle.prototype.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\n\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n* Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in seconds)\n* will force a number of leading zeros to cover the length of the guide.\n*\n* @param {number} seconds\n*        Number of seconds to be turned into a string\n*\n* @param {number} guide\n*        Number (in seconds) to model the string after\n*\n* @return {string}\n*         Time formatted as H:MM:SS or M:SS\n*/\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n\n  return h + m + s;\n};\n\nvar implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime implementation.\n *        Will receive the current time in seconds and the guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\nvar formatTime = function (seconds) {\n  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;\n\n  return implementation(seconds, guide);\n};\n\n/**\n * @file time-display.js\n */\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar TimeDisplay = function (_Component) {\n  inherits(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    classCallCheck(this, TimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.throttledUpdateContent = throttle(bind(_this, _this.updateContent), 25);\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TimeDisplay.prototype.createEl = function createEl$$1(plainName) {\n    var className = this.buildCSSClass();\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + ' vjs-time-control vjs-control',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize(this.labelText_) + '\\xA0</span>'\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + '-display'\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off'\n    });\n\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  TimeDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  };\n\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  };\n\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  };\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  TimeDisplay.prototype.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nTimeDisplay.prototype.controlText_ = 'Time';\n\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay = function (_TimeDisplay) {\n  inherits(CurrentTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    classCallCheck(this, CurrentTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CurrentTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  };\n\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  CurrentTimeDisplay.prototype.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\n    this.updateFormattedTime_(time);\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  CurrentTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\n\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay = function (_TimeDisplay) {\n  inherits(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    classCallCheck(this, DurationDisplay);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DurationDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  };\n\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n\n\n  DurationDisplay.prototype.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (duration && this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nDurationDisplay.prototype.controlText_ = 'Duration';\n\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider = function (_Component) {\n  inherits(TimeDivider, _Component);\n\n  function TimeDivider() {\n    classCallCheck(this, TimeDivider);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeDivider.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay = function (_TimeDisplay) {\n  inherits(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    classCallCheck(this, RemainingTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  RemainingTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  };\n\n  /**\n   * The remaining time display prefixes numbers with a \"minus\" character.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  RemainingTimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    // TODO: The \"-\" should be decorative, and not announced by a screen reader\n    return '-' + _TimeDisplay.prototype.formatTime_.call(this, time);\n  };\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n\n\n  RemainingTimeDisplay.prototype.updateContent = function updateContent(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  RemainingTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay = function (_Component) {\n  inherits(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    classCallCheck(this, LiveDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.updateShowing();\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LiveDisplay.prototype.createEl = function createEl$$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Stream Type') + '\\xA0</span>' + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  LiveDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n\n\n  LiveDisplay.prototype.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file slider.js\n */\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider = function (_Component) {\n  inherits(Slider, _Component);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function Slider(player, options) {\n    classCallCheck(this, Slider);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.bar = _this.getChild(_this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  Slider.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n\n\n  Slider.prototype.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('focus', this.handleFocus);\n    this.on('blur', this.handleBlur);\n    this.on('click', this.handleClick);\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n\n\n  Slider.prototype.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    var doc = this.bar.el_.ownerDocument;\n\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  };\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Slider.prototype.createEl = function createEl$$1(type) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n\n\n  Slider.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n    blockTextSelection();\n\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('slideractive');\n\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n\n    this.handleMouseMove(event);\n  };\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  Slider.prototype.handleMouseMove = function handleMouseMove(event) {};\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n\n\n  Slider.prototype.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n\n    unblockTextSelection();\n\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('sliderinactive');\n\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n\n    this.update();\n  };\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @returns {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n\n\n  Slider.prototype.update = function update() {\n\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    }\n\n    // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n    var progress = this.getPercent();\n    var bar = this.bar;\n\n    // If there's no bar...\n    if (!bar) {\n      return;\n    }\n\n    // Protect against no duration and other division issues\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    }\n\n    // Convert to a percentage for setting\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style;\n\n    // Set the new bar width or height\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  };\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - postition.x for vertical `Slider`s\n   *         - postition.y for horizontal `Slider`s\n   */\n\n\n  Slider.prototype.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  };\n\n  /**\n   * Handle a `focus` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to run.\n   *\n   * @listens focus\n   */\n\n\n  Slider.prototype.handleFocus = function handleFocus() {\n    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n\n\n  Slider.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepForward();\n    }\n  };\n\n  /**\n   * Handle a `blur` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to run.\n   *\n   * @listens blur\n   */\n\n  Slider.prototype.handleBlur = function handleBlur() {\n    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n\n\n  Slider.prototype.handleClick = function handleClick(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  };\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n\n\n  Slider.prototype.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar = function (_Component) {\n  inherits(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    classCallCheck(this, LoadProgressBar);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.partEls_ = [];\n    _this.on(player, 'progress', _this.update);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LoadProgressBar.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Loaded') + '</span>: 0%</span>'\n    });\n  };\n\n  LoadProgressBar.prototype.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n\n\n  LoadProgressBar.prototype.update = function update(event) {\n    var buffered = this.player_.buffered();\n    var duration = this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n\n    // get the percent width of a time compared to the total end\n    var percentify = function percentify(time, end) {\n      // no NaN\n      var percent = time / end || 0;\n\n      return (percent >= 1 ? 1 : percent) * 100 + '%';\n    };\n\n    // update the width of the progress bar\n    this.el_.style.width = percentify(bufferedEnd, duration);\n\n    // add child elements to represent the individual buffered time ranges\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      }\n\n      // set the percent based on the width of the progress bar (bufferedEnd)\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    }\n\n    // remove unused buffered range elements\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip = function (_Component) {\n  inherits(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    classCallCheck(this, TimeTooltip);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeTooltip.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    });\n  };\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  TimeTooltip.prototype.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    var pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = '-' + pullTooltipBy + 'px';\n    textContent(this.el_, content);\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar = function (_Component) {\n  inherits(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    classCallCheck(this, PlayProgressBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  PlayProgressBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Progress') + '</span>: 0%</span>'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  PlayProgressBar.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var time = _this2.player_.scrubbing() ? _this2.player_.getCache().currentTime : _this2.player_.currentTime();\n\n      var content = formatTime(time, _this2.player_.duration());\n      var timeTooltip = _this2.getChild('timeTooltip');\n\n      if (timeTooltip) {\n        timeTooltip.update(seekBarRect, seekBarPoint, content);\n      }\n    });\n  };\n\n  return PlayProgressBar;\n}(Component);\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices or IE8\nif ((!IE_VERSION || IE_VERSION > 8) && !IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay = function (_Component) {\n  inherits(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    classCallCheck(this, MouseTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.update = throttle(bind(_this, _this.update), 25);\n    return _this;\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  MouseTimeDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  MouseTimeDisplay.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var duration = _this2.player_.duration();\n      var content = formatTime(seekBarPoint * duration, duration);\n\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + 'px';\n      _this2.getChild('timeTooltip').update(seekBarRect, seekBarPoint, content);\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\n\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n// The number of seconds the `step*` functions move the timeline.\nvar STEP_SECONDS = 5;\n\n// The interval at which the bar should update as it progresses.\nvar UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar = function (_Slider) {\n  inherits(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    classCallCheck(this, SeekBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.setEventHandlers_();\n    return _this;\n  }\n\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.setEventHandlers_ = function setEventHandlers_() {\n    var _this2 = this;\n\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    this.updateInterval = null;\n\n    this.on(this.player_, ['playing'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n\n      _this2.updateInterval = _this2.setInterval(function () {\n        _this2.requestAnimationFrame(function () {\n          _this2.update();\n        });\n      }, UPDATE_REFRESH_INTERVAL);\n    });\n\n    this.on(this.player_, ['ended', 'pause', 'waiting'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n    });\n\n    this.on(this.player_, ['timeupdate', 'ended'], this.update);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  SeekBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  };\n\n  /**\n   * This function updates the play progress bar and accessiblity\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessiblity\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.update_ = function update_(currentTime, percent) {\n    var duration = this.player_.duration();\n\n    // machine readable value of progress bar (percentage complete)\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n    // human readable value of progress bar (time complete)\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n    // Update the `PlayProgressBar`.\n    this.bar.update(getBoundingClientRect(this.el_), percent);\n  };\n\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @returns {number}\n   *          The current percent at a number from 0-1\n   */\n\n\n  SeekBar.prototype.update = function update(event) {\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  };\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  };\n\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  SeekBar.prototype.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  };\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n\n\n  SeekBar.prototype.getPercent = function getPercent() {\n    var percent = this.getCurrentTime_() / this.player_.duration();\n\n    return percent >= 1 ? 1 : percent;\n  };\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  SeekBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n\n\n  SeekBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime = this.calculateDistance(event) * this.player_.duration();\n\n    // Don't let video end while scrubbing.\n    if (newTime === this.player_.duration()) {\n      newTime = newTime - 0.1;\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.player_.currentTime(newTime);\n  };\n\n  SeekBar.prototype.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  SeekBar.prototype.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  };\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n\n\n  SeekBar.prototype.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  };\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  };\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  };\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n\n\n  SeekBar.prototype.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down. By\n   * default it will call `this.handleAction` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  SeekBar.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.handleAction(event);\n    } else if (_Slider.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Slider.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n// MouseTimeDisplay tooltips should not be added to a player on mobile devices or IE8\nif ((!IE_VERSION || IE_VERSION > 8) && !IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nSeekBar.prototype.playerEvent = 'timeupdate';\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl = function (_Component) {\n  inherits(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    classCallCheck(this, ProgressControl);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.handleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_this, _this.handleMouseSeek), 25);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  ProgressControl.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  };\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n\n\n  ProgressControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n      // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  };\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  ProgressControl.prototype.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  };\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  ProgressControl.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n\n    this.addClass('disabled');\n\n    this.enabled_ = false;\n  };\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  ProgressControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  ProgressControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\n\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file fullscreen-toggle.js\n */\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle = function (_Button) {\n  inherits(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    classCallCheck(this, FullscreenToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[FullscreenApi.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  FullscreenToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-fullscreen-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n\n\n  FullscreenToggle.prototype.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  };\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  FullscreenToggle.prototype.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\n\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel = function (_Component) {\n  inherits(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    classCallCheck(this, VolumeLevel);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  VolumeLevel.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-bar.js\n */\n// Required children\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar = function (_Slider) {\n  inherits(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    classCallCheck(this, VolumeBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.on('slideractive', _this.updateLastVolume_);\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  };\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  VolumeBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n\n\n  VolumeBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  };\n\n  /**\n   * If the player is muted unmute it.\n   */\n\n\n  VolumeBar.prototype.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  };\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n\n\n  VolumeBar.prototype.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  };\n\n  /**\n   * Increase volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  };\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  };\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n\n\n  VolumeBar.prototype.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  };\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n\n\n  VolumeBar.prototype.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  };\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n\n\n  VolumeBar.prototype.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\n\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n// Required children\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl = function (_Component) {\n  inherits(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumeControl);\n\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    checkVolumeSupport(_this, player);\n\n    _this.throttledHandleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n    _this.on('touchstart', _this.handleMouseDown);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n      _this.addClass('vjs-slider-active');\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n      _this.removeClass('vjs-slider-active');\n      _this.trigger('sliderinactive');\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeControl.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-control vjs-control ' + orientationClass\n    });\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  VolumeControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\n\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file mute-toggle.js\n */\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle = function (_Button) {\n  inherits(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    classCallCheck(this, MuteToggle);\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    checkMuteSupport(_this, player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MuteToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-mute-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MuteToggle.prototype.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  };\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n\n\n  MuteToggle.prototype.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  };\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3;\n\n    // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n    if (IS_IOS) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    }\n\n    // TODO improve muted icon classes\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, 'vjs-vol-' + i);\n    }\n    addClass(this.el_, 'vjs-vol-' + level);\n  };\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\n\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n// Required children\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel = function (_Component) {\n  inherits(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumePanel);\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n    return _this;\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  };\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  };\n\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n\n\n  VolumePanel.prototype.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    }\n\n    // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumePanel.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-panel vjs-control ' + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\n\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * @file menu.js\n */\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu = function (_Component) {\n  inherits(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    classCallCheck(this, Menu);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyPress);\n    return _this;\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n\n\n  Menu.prototype.addItem = function addItem(component) {\n    this.addChild(component);\n    component.on('click', bind(this, function (event) {\n      // Unpress the associated MenuButton, and move focus back to it\n      if (this.menuButton_) {\n        this.menuButton_.unpressButton();\n\n        // don't focus menu button if item is a caption settings item\n        // because focus will move elsewhere and it logs an error on IE8\n        if (component.name() !== 'CaptionSettingsMenuItem') {\n          this.menuButton_.focus();\n        }\n      }\n    }));\n  };\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n\n\n  Menu.prototype.createEl = function createEl$$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n\n    return el;\n  };\n\n  Menu.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n\n\n  Menu.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepBack();\n    }\n  };\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n\n\n  Menu.prototype.focus = function focus() {\n    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton = function (_Component) {\n  inherits(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, MenuButton);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n    _this.on(_this.menuButton_, 'focus', _this.handleFocus);\n    _this.on(_this.menuButton_, 'blur', _this.handleBlur);\n\n    _this.on('keydown', _this.handleSubmenuKeyPress);\n    return _this;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  MenuButton.prototype.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n\n\n  MenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, { menuButton: this });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      var title = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n\n      this.hideThreshold_ += 1;\n\n      menu.children_.unshift(title);\n      prependTo(title, menu.contentEl());\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n\n\n  MenuButton.prototype.createItems = function createItems() {};\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuButton.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  };\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n\n\n  MenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + buttonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  MenuButton.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.menuButton_.el();\n\n    return this.menuButton_.controlText(text, el);\n  };\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuButton.prototype.handleClick = function handleClick(event) {\n    // When you click the button it adds focus, which will show the menu.\n    // So we'll remove focus when the mouse leaves the button. Focus is needed\n    // for tab navigation.\n\n    this.one(this.menu.contentEl(), 'mouseleave', bind(this, function (e) {\n      this.unpressButton();\n      this.el_.blur();\n    }));\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  };\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n\n\n  MenuButton.prototype.focus = function focus() {\n    this.menuButton_.focus();\n  };\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n\n\n  MenuButton.prototype.blur = function blur() {\n    this.menuButton_.blur();\n  };\n\n  /**\n   * This gets called when a `MenuButton` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  MenuButton.prototype.handleFocus = function handleFocus() {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when a `MenuButton` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  MenuButton.prototype.handleBlur = function handleBlur() {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n      // Up (38) key or Down (40) key press the 'button'\n    } else if (event.which === 38 || event.which === 40) {\n      if (!this.buttonPressed_) {\n        this.pressButton();\n        event.preventDefault();\n      }\n    }\n  };\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n    }\n  };\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n\n\n  MenuButton.prototype.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  };\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n\n\n  MenuButton.prototype.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  };\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.disable = function disable() {\n    this.unpressButton();\n\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n\n    this.menuButton_.disable();\n  };\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton = function (_MenuButton) {\n  inherits(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    classCallCheck(this, TrackButton);\n\n    var tracks = options.tracks;\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return possibleConstructorReturn(_this);\n    }\n\n    var updateHandler = bind(_this, _this.update);\n\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-item.js\n */\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem = function (_ClickableComponent) {\n  inherits(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    classCallCheck(this, MenuItem);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n    return _this;\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label) + '</span>',\n      tabIndex: -1\n    }, props), attrs);\n  };\n\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuItem.prototype.handleClick = function handleClick(event) {\n    this.selected(true);\n  };\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n\n\n  MenuItem.prototype.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem = function (_MenuItem) {\n  inherits(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    classCallCheck(this, TextTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_this, args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      var event = void 0;\n\n      _this.on(['tap', 'click'], function () {\n        if (_typeof(window.Event) !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    _this.handleTracksChange();\n    return _this;\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  TextTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var kind = this.track.kind;\n    var kinds = this.track.kinds;\n    var tracks = this.player_.textTracks();\n\n    if (!kinds) {\n      kinds = [kind];\n    }\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      if (track === this.track && kinds.indexOf(track.kind) > -1) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  };\n\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  TextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  TextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  TextTrackMenuItem.prototype.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem = function (_TextTrackMenuItem) {\n  inherits(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    classCallCheck(this, OffTextTrackMenuItem);\n\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      kind: options.kind,\n      kinds: options.kinds,\n      'default': false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n    // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n    options.multiSelectable = false;\n\n    return possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  OffTextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  OffTextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton = function (_TrackButton) {\n  inherits(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, TextTrackButton);\n\n    options.tracks = player.textTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  TextTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var TrackMenuItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TextTrackMenuItem;\n\n\n    // Label is an overide for the [track] off label\n    // USed to localise captions/subtitles\n    var label = void 0;\n\n    if (this.label_) {\n      label = this.label_ + ' off';\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n\n    this.hideThreshold_ += 1;\n\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n\n        item.addClass('vjs-' + track.kind + '-menu-item');\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem = function (_MenuItem) {\n  inherits(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    classCallCheck(this, ChaptersTrackMenuItem);\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  ChaptersTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  };\n\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n\n\n  ChaptersTrackMenuItem.prototype.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime();\n\n    // vjs.log(currentTime, cue.startTime);\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton = function (_TextTrackButton) {\n  inherits(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    classCallCheck(this, ChaptersButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ChaptersButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  ChaptersButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n\n\n  ChaptersButton.prototype.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n    _TextTrackButton.prototype.update.call(this);\n  };\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n\n\n  ChaptersButton.prototype.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  };\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n\n\n  ChaptersButton.prototype.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  };\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n\n\n  ChaptersButton.prototype.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase(this.kind_));\n  };\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n\n\n  ChaptersButton.prototype.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  };\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n\n\n  ChaptersButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, { track: this.track_, cue: cue });\n\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\n\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton = function (_TextTrackButton) {\n  inherits(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    classCallCheck(this, DescriptionsButton);\n\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    var tracks = player.textTracks();\n    var changeHandler = bind(_this, _this.handleTracksChange);\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  DescriptionsButton.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DescriptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  DescriptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\n\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton = function (_TextTrackButton) {\n  inherits(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    classCallCheck(this, SubtitlesButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubtitlesButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubtitlesButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem = function (_TextTrackMenuItem) {\n  inherits(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    classCallCheck(this, CaptionSettingsMenuItem);\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      'default': false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n\n    options.name = 'CaptionSettingsMenuItem';\n\n    var _this = possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n\n    _this.addClass('vjs-texttrack-settings');\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n    return _this;\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  CaptionSettingsMenuItem.prototype.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton = function (_TextTrackButton) {\n  inherits(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    classCallCheck(this, CaptionsButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CaptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  CaptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  CaptionsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.kind_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\n\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem = function (_TextTrackMenuItem) {\n  inherits(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    classCallCheck(this, SubsCapsMenuItem);\n    return possibleConstructorReturn(this, _TextTrackMenuItem.apply(this, arguments));\n  }\n\n  SubsCapsMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Captions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton = function (_TextTrackButton) {\n  inherits(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, SubsCapsButton);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options));\n\n    _this.label_ = 'subtitles';\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubsCapsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubsCapsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  SubsCapsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.label_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem = function (_MenuItem) {\n  inherits(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    classCallCheck(this, AudioTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n\n    _this.addClass('vjs-' + track.kind + '-menu-item');\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  AudioTrackMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Descriptions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  AudioTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      track.enabled = track === this.track;\n    }\n  };\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n\n\n  AudioTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton = function (_TrackButton) {\n  inherits(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, AudioTrackButton);\n\n    options.tracks = player.audioTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  AudioTrackButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  AudioTrackButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n\n\n  AudioTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem = function (_MenuItem) {\n  inherits(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    classCallCheck(this, PlaybackRateMenuItem);\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n    return _this;\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player().playbackRate(this.rate);\n  };\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuItem.prototype.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\n\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton = function (_MenuButton) {\n  inherits(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    classCallCheck(this, PlaybackRateMenuButton);\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    _this.updateVisibility();\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n    _this.on(player, 'ratechange', _this.updateLabel);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  PlaybackRateMenuButton.prototype.createEl = function createEl$$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n\n    el.appendChild(this.labelEl_);\n\n    return el;\n  };\n\n  PlaybackRateMenuButton.prototype.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlaybackRateMenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  PlaybackRateMenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n\n\n  PlaybackRateMenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), { rate: rates[i] + 'x' }));\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Updates ARIA accessibility attributes\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  };\n\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuButton.prototype.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates();\n\n    // this will select first one if the last one currently selected\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n    this.player().playbackRate(newRate);\n  };\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  };\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  };\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  };\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer = function (_Component) {\n  inherits(Spacer, _Component);\n\n  function Spacer() {\n    classCallCheck(this, Spacer);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  Spacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-spacer ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  Spacer.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer = function (_Spacer) {\n  inherits(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    classCallCheck(this, CustomControlSpacer);\n    return possibleConstructorReturn(this, _Spacer.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  CustomControlSpacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-custom-control-spacer ' + _Spacer.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  CustomControlSpacer.prototype.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    });\n\n    // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n    el.innerHTML = '\\xA0';\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n// Required children\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar = function (_Component) {\n  inherits(ControlBar, _Component);\n\n  function ControlBar() {\n    classCallCheck(this, ControlBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ControlBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay = function (_ModalDialog) {\n  inherits(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    classCallCheck(this, ErrorDisplay);\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.on(player, 'error', _this.open);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  ErrorDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-error-display ' + _ModalDialog.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n\n\n  ErrorDisplay.prototype.content = function content() {\n    var error = this.player().error();\n\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\n\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/**\n * @file text-track-settings.js\n */\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\n\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\n\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    'default': 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\n\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\nvar TextTrackSettings = function (_ModalDialog) {\n  inherits(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    classCallCheck(this, TextTrackSettings);\n\n    options.temporary = false;\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.updateDisplay = bind(_this, _this.updateDisplay);\n\n    // fill the modal and pretend we have opened it\n    _this.fill();\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n    return _this;\n  }\n\n  TextTrackSettings.prototype.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElSelect_ = function createElSelect_(key) {\n    var _this2 = this;\n\n    var legendId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'label';\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n\n    return ['<' + type + ' id=\"' + id + '\" class=\"' + (type === 'label' ? 'vjs-label' : '') + '\">', this.localize(config.label), '</' + type + '>', '<select aria-labelledby=\"' + selectLabelledbyIds + '\">'].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n\n      return ['<option id=\"' + optionId + '\" value=\"' + o[0] + '\" ', 'aria-labelledby=\"' + selectLabelledbyIds + ' ' + optionId + '\">', _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  };\n\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFgColor_ = function createElFgColor_() {\n    var legendId = 'captions-text-legend-' + this.id_;\n\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElBgColor_ = function createElBgColor_() {\n    var legendId = 'captions-background-' + this.id_;\n\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElWinColor_ = function createElWinColor_() {\n    var legendId = 'captions-window-' + this.id_;\n\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  };\n\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  };\n\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: ['<button type=\"button\" class=\"vjs-default-button\" title=\"' + defaultsDescription + '\">', this.localize('Reset'), '<span class=\"vjs-control-text\"> ' + defaultsDescription + '</span>', '</button>', '<button type=\"button\" class=\"vjs-done-button\">' + this.localize('Done') + '</button>'].join('')\n    });\n  };\n\n  TextTrackSettings.prototype.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  TextTrackSettings.prototype.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  TextTrackSettings.prototype.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  TextTrackSettings.prototype.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  };\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  };\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  };\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n\n\n  TextTrackSettings.prototype.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config['default'] : 0;\n\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  };\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n\n\n  TextTrackSettings.prototype.restoreSettings = function restoreSettings() {\n    var values = void 0;\n\n    try {\n      values = JSON.parse(window.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  };\n\n  /**\n   * Save text track settings to localStorage\n   */\n\n\n  TextTrackSettings.prototype.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log.warn(err);\n    }\n  };\n\n  /**\n   * Update display of text track settings\n   */\n\n\n  TextTrackSettings.prototype.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    this.off(document, 'keydown', this.handleKeyDown);\n\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager = function (_Component) {\n  inherits(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    classCallCheck(this, ResizeManager);\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    var options_ = mergeOptions({ createEl: !RESIZE_OBSERVER_AVAILABLE }, options);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_));\n\n    _this.ResizeObserver = options.ResizeObserver || window.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, _this);\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (!_this.el_ || !_this.el_.contentWindow) {\n          return;\n        }\n\n        on(_this.el_.contentWindow, 'resize', _this.debouncedHandler_);\n      };\n\n      _this.one('load', _this.loadListener_);\n    }\n    return _this;\n  }\n\n  ResizeManager.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager'\n    });\n  };\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n\n\n  ResizeManager.prototype.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n\n    this.player_.trigger('playerresize');\n  };\n\n  ResizeManager.prototype.dispose = function dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.el_ && this.el_.contentWindow) {\n      off(this.el_.contentWindow, 'resize', this.debouncedHandler_);\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el();\n\n  // if `el.src` is set, that source will be loaded.\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = '';\n\n  // if there are no sources, do not fire sourceset\n  if (!sources.length) {\n    return false;\n  }\n\n  // only count valid/non-duplicate source elements\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  }\n\n  // there were no valid sources\n  if (!srcUrls.length) {\n    return false;\n  }\n\n  // there is only one valid source element url\n  // use that\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\nvar innerHTMLDescriptorPolyfill = {};\n\nif (!IS_IE8) {\n  innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n    get: function get() {\n      return this.cloneNode(true).innerHTML;\n    },\n    set: function set(v) {\n      // make a dummy node to use innerHTML on\n      var dummy = document.createElement(this.nodeName.toLowerCase());\n\n      // set innerHTML to the value provided\n      dummy.innerHTML = v;\n\n      // make a document fragment to hold the nodes from dummy\n      var docFrag = document.createDocumentFragment();\n\n      // copy all of the nodes created by the innerHTML on dummy\n      // to the document fragment\n      while (dummy.childNodes.length) {\n        docFrag.appendChild(dummy.childNodes[0]);\n      }\n\n      // remove content\n      this.innerText = '';\n\n      // now we add all of that html in one by appending the\n      // document fragment. This is how innerHTML does it.\n      window.Element.prototype.appendChild.call(this, docFrag);\n\n      // then return the result that innerHTML's setter would\n      return this.innerHTML;\n    }\n  });\n}\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window.HTMLMediaElement.prototype, window.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n\n/**\n * Patches browser internal functions so that we can tell syncronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el();\n\n  // make sure firstSourceWatch isn't setup twice.\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n\n      sourcesetLoad(tech);\n\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    }\n\n    // store the old function\n    old[k] = el[k];\n\n    // call the old function with a sourceset if a source\n    // was loaded\n    el[k] = appendWrapper(old[k]);\n  });\n\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  };\n\n  // on the first sourceset, we need to revert our changes\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\nvar srcDescriptorPolyfill = {};\n\nif (!IS_IE8) {\n  srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n    get: function get() {\n      if (this.hasAttribute('src')) {\n        return getAbsoluteURL(window.Element.prototype.getAttribute.call(this, 'src'));\n      }\n\n      return '';\n    },\n    set: function set(v) {\n      window.Element.prototype.setAttribute.call(this, 'src', v);\n\n      return v;\n    }\n  });\n}\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el();\n\n  // make sure sourceset isn't setup twice.\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v);\n\n      // we use the getter here to get the actual value set on src\n      tech.triggerSourceset(el.src);\n\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el);\n\n    // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nvar _templateObject$2 = taggedTemplateLiteralLoose(['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.'], ['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.']);\n\n/**\n * @file html5.js\n */\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SouceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 = function (_Tech) {\n  inherits(Html5, _Tech);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Html5(options, ready) {\n    classCallCheck(this, Html5);\n\n    var _this = possibleConstructorReturn(this, _Tech.call(this, options, ready));\n\n    var source = options.source;\n    var crossoriginTracks = false;\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    }\n\n    // setup sourceset after late sourceset/init\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n            _this.remoteTextTracks().addTrack(node.track);\n            _this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log.warn(tsml(_templateObject$2));\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    _this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n    return _this;\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  Html5.prototype.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    _Tech.prototype.dispose.call(this);\n  };\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n\n\n  Html5.prototype.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  };\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState = void 0;\n\n    // captures a snapshot of every metadata track's current state\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  };\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this2 = this;\n\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n      var elTracks = _this2.el()[props.getterName];\n      var techTracks = _this2[props.getterName]();\n\n      if (!_this2['featuresNative' + props.capitalName + 'Tracks'] || !elTracks || !elTracks.addEventListener) {\n        return;\n      }\n      var listeners = {\n        change: function change(e) {\n          techTracks.trigger({\n            type: 'change',\n            target: techTracks,\n            currentTarget: techTracks,\n            srcElement: techTracks\n          });\n        },\n        addtrack: function addtrack(e) {\n          techTracks.addTrack(e.track);\n        },\n        removetrack: function removetrack(e) {\n          techTracks.removeTrack(e.track);\n        }\n      };\n      var removeOldTracks = function removeOldTracks() {\n        var removeTracks = [];\n\n        for (var i = 0; i < techTracks.length; i++) {\n          var found = false;\n\n          for (var j = 0; j < elTracks.length; j++) {\n            if (elTracks[j] === techTracks[i]) {\n              found = true;\n              break;\n            }\n          }\n\n          if (!found) {\n            removeTracks.push(techTracks[i]);\n          }\n        }\n\n        while (removeTracks.length) {\n          techTracks.removeTrack(removeTracks.shift());\n        }\n      };\n\n      Object.keys(listeners).forEach(function (eventName) {\n        var listener = listeners[eventName];\n\n        elTracks.addEventListener(eventName, listener);\n        _this2.on('dispose', function (e) {\n          return elTracks.removeEventListener(eventName, listener);\n        });\n      });\n\n      // Remove (native) tracks that are not used anymore\n      _this2.on('loadstart', removeOldTracks);\n      _this2.on('dispose', function (e) {\n        return _this2.off('loadstart', removeOldTracks);\n      });\n    });\n  };\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Html5.prototype.createEl = function createEl$$1() {\n    var el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video');\n\n        // determine if native controls should be used\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          'class': 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  };\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n\n\n  Html5.prototype.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    var eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  };\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n\n\n  Html5.prototype.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  };\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n\n\n  Html5.prototype.duration = function duration() {\n    var _this3 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this3.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this3.el_.duration === Infinity) {\n            _this3.trigger('durationchange');\n          }\n          _this3.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  };\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n\n\n  Html5.prototype.width = function width() {\n    return this.el_.offsetWidth;\n  };\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The heigth of the HTML5 media element.\n   */\n\n\n  Html5.prototype.height = function height() {\n    return this.el_.offsetHeight;\n  };\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n\n\n  Html5.prototype.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this4 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', { isFullscreen: false });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n\n        this.trigger('fullscreenchange', { isFullscreen: true });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this4.off('webkitbeginfullscreen', beginFn);\n      _this4.off('webkitendfullscreen', endFn);\n    });\n  };\n\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n\n\n  Html5.prototype.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window.navigator && window.navigator.userAgent || '';\n\n      // Seems to be broken in Chromium/Chrome && Safari in Leopard\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n\n\n  Html5.prototype.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play();\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  };\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n\n\n  Html5.prototype.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  };\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  Html5.prototype.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(_src);\n  };\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n\n\n  Html5.prototype.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  };\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n\n\n  Html5.prototype.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  };\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n\n\n  Html5.prototype.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Html5.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  };\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to intialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Html5.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options['default']) {\n      htmlTrackElement['default'] = options['default'];\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {Boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Html5.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n\n\n  Html5.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n\n\n  Html5.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window.performance && typeof window.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window.performance.now();\n    } else if (window.performance && window.performance.timing && typeof window.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window.Date.now() - window.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\nif (isReal()) {\n\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE9 with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted;\n\n    // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n    Html5.TEST_VID.muted = !muted;\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overriden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  if (IS_IE8) {\n    return false;\n  }\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', { get: noop, set: noop });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n\n/**\n * Boolean indicating wether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggred instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggred instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks();\n\n// HTML5 Feature detection and Device Fixes --------------------------------- //\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\nvar mp4RE = /^video\\/mp4/i;\n\nHtml5.patchCanPlayType = function () {\n\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n\n    // Override Android 2.2 and less canPlayType method which is broken\n  } else if (IS_OLD_ANDROID) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mp4RE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n};\n\n// by default, patch the media element\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occured during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - Flase indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NEWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n\n/**\n * Get the value of `videoHeight` from the video element. `videoHeigth` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\n\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @proprety {Tech~SourceObject} source\n *        The source object\n *\n * @proprety {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE9 on Windows 7 without MediaPlayer throws an error here\n  // https://github.com/videojs/video.js/issues/519\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n\n    return Html5.nativeSourceHandler.canPlayType('video/' + ext);\n  }\n\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\n\nTech.registerTech('Html5', Html5);\n\nvar _templateObject$1 = taggedTemplateLiteralLoose(['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      '], ['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      ']);\n\n/**\n * @file player.js\n */\n// Subclasses Component\n// The following imports are used only to ensure that the corresponding modules\n// are always included in the video.js package. Importing the modules will\n// execute them and they will register themselves with video.js.\n// Import Html5 tech, at least for disposing the original video tag.\n// The following tech events are simply re-triggered\n// on the player when they happen\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\n\nvar BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\n\nvar BREAKPOINT_CLASSES = {};\n\n// grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\nBREAKPOINT_ORDER.forEach(function (k) {\n  var v = k.charAt(0) === 'x' ? 'x-' + k.substring(1) : k;\n\n  BREAKPOINT_CLASSES[k] = 'vjs-layout-' + v;\n});\n\nvar DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player = function (_Component) {\n  inherits(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    classCallCheck(this, Player);\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || 'vjs_video_' + newGUID();\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n          element = element.parentNode;\n        }\n      }\n    }\n\n    // Run base component initializing with new options\n\n    // create logger\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.log = createLogger(_this.id_);\n\n    // Tracks when a tech changes the poster\n    _this.isPosterFromTech_ = false;\n\n    // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n    _this.queuedCallbacks_ = [];\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    _this.isReady_ = false;\n\n    // Init state hasStarted_\n    _this.hasStarted_ = false;\n\n    // Init state userActive_\n    _this.userActive_ = false;\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    _this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    _this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    _this.language(_this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n\n      Object.getOwnPropertyNames(options.languages).forEach(function (name$$1) {\n        languagesToLower[name$$1.toLowerCase()] = options.languages[name$$1];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    // Cache for video property values.\n    _this.cache_ = {};\n\n    // Set poster\n    _this.poster_ = options.poster || '';\n\n    // Set controls\n    _this.controls_ = !!options.controls;\n\n    // Set default values for lastVolume\n    _this.cache_.lastVolume = 1;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n\n    // the attribute overrides the option\n    if (tag.hasAttribute('autoplay')) {\n      _this.options_.autoplay = true;\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    }\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    _this.scrubbing_ = false;\n\n    _this.el_ = _this.createEl();\n\n    // Set default value for lastPlaybackRate\n    _this.cache_.lastPlaybackRate = _this.defaultPlaybackRate();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(_this, { eventBusKey: 'el_' });\n\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    var playerOptionsCopy = mergeOptions(_this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      var plugins = options.plugins;\n\n      Object.keys(plugins).forEach(function (name$$1) {\n        if (typeof this[name$$1] === 'function') {\n          this[name$$1](plugins[name$$1]);\n        } else {\n          throw new Error('plugin \"' + name$$1 + '\" does not exist');\n        }\n      }, _this);\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n\n    _this.middleware_ = [];\n\n    _this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    _this.el_.setAttribute('role', 'region');\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // if (browser.TOUCH_ENABLED) {\n    //   this.addClass('vjs-touch-enabled');\n    // }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[_this.id_] = _this;\n\n    // Add a major version class to aid css in plugins\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass('vjs-v' + majorVersion);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    _this.userActive(true);\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n    _this.on('fullscreenchange', _this.handleFullscreenChange_);\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.breakpoints(_this.options_.breakpoints);\n    _this.responsive(_this.options_.responsive);\n\n    _this.changingSrc_ = false;\n    _this.playWaitingForReady_ = false;\n    _this.playOnLoadstart_ = null;\n    return _this;\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  Player.prototype.dispose = function dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this);\n\n    // the actual .el_ is removed here\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  Player.prototype.createEl = function createEl$$1() {\n    var tag = this.tag;\n    var el = void 0;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n\n      playerElIngest = this.playerElIngest_ = el;\n\n      // copy over properties from the video-js element\n      // ie8 doesn't support Object.keys nor hasOwnProperty\n      // on dom elements so we have to specify properties individually\n      ['autoplay', 'controls', 'crossOrigin', 'defaultMuted', 'defaultPlaybackRate', 'loop', 'muted', 'playbackRate', 'src', 'volume'].forEach(function (prop) {\n        if (typeof el[prop] !== 'undefined') {\n          tag[prop] = el[prop];\n        }\n      });\n    }\n\n    // set tabindex to -1 to remove the video element from the focus order\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1';\n\n    // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button)\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 if JAWS is not being used\n    if (IE_VERSION) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    }\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // workaround so we don't totally break IE7\n      // http://stackoverflow.com/questions/3653444/css-styles-not-applied-on-dynamic-elements-in-internet-explorer-7\n      if (attr === 'class') {\n        el.className += ' ' + attrs[attr];\n\n        if (divEmbed) {\n          tag.className += ' ' + attrs[attr];\n        }\n      } else {\n        el.setAttribute(attr, attrs[attr]);\n\n        if (divEmbed) {\n          tag.setAttribute(attr, attrs[attr]);\n        }\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n    if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    this.fill_ = false;\n    this.fluid_ = false;\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n\n    // Hide any links within the video/audio tag, because IE doesn't hide them completely.\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n\n    this.el_ = el;\n\n    return el;\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n\n\n  Player.prototype.width = function width(value) {\n    return this.dimension('width', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n\n\n  Player.prototype.height = function height(value) {\n    return this.dimension('height', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n\n\n  Player.prototype.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log.error('Improper value \"' + value + '\" supplied for for ' + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  };\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n\n\n  Player.prototype.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n\n\n  Player.prototype.fill = function fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n\n    this.fill_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  };\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n\n\n  Player.prototype.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n\n\n  Player.prototype.updateStyleEl_ = function updateStyleEl_() {\n    if (window.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width = void 0;\n    var height = void 0;\n    var aspectRatio = void 0;\n    var idClass = void 0;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n\n    setTextContent(this.styleEl_, '\\n      .' + idClass + ' {\\n        width: ' + width + 'px;\\n        height: ' + height + 'px;\\n      }\\n\\n      .' + idClass + '.vjs-fluid {\\n        padding-top: ' + ratioMultiplier * 100 + '%;\\n      }\\n    ');\n  };\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n\n\n  Player.prototype.loadTech_ = function loadTech_(techName, source) {\n    var _this2 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay();\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + '_' + camelTechName + '_api',\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      techOptions[props.getterName] = _this2[props.privateName];\n    });\n\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error('No Tech named \\'' + titleTechName + '\\' exists! \\'' + titleTechName + '\\' should be registered using videojs.registerTech()\\'');\n    }\n\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this2.on(_this2.tech_, event, _this2['handleTech' + toTitleCase(event) + '_']);\n    });\n\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this2.on(_this2.tech_, event, function (eventObj) {\n        if (_this2.tech_.playbackRate() === 0 && _this2.tech_.seeking()) {\n          _this2.queuedCallbacks_.push({\n            callback: _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'].bind(_this2),\n            event: eventObj\n          });\n          return;\n        }\n        _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'](eventObj);\n      });\n    });\n\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  };\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n\n\n  Player.prototype.unloadTech_ = function unloadTech_() {\n    var _this3 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      _this3[props.privateName] = _this3[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n\n    this.isReady_ = false;\n\n    this.tech_.dispose();\n\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  };\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n\n\n  Player.prototype.tech = function tech(safety) {\n    if (safety === undefined) {\n      log.warn(tsml(_templateObject$1));\n    }\n\n    return this.tech_;\n  };\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n\n\n  Player.prototype.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n\n    // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n    this.on(this.tech_, 'mousedown', this.handleTechClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  };\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n\n\n  Player.prototype.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mousedown', this.handleTechClick_);\n  };\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n\n\n  Player.prototype.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n\n    // Chrome and Safari both have issues with autoplay.\n    // In Safari (5.1.1), when we move the video element into the container div, autoplay doesn't work.\n    // In Chrome (15), if you have autoplay + a poster + no controls, the video gets hidden (but audio plays)\n    // This fixes both issues. Need to wait for API, so it updates displays correctly\n    if ((this.src() || this.currentSrc()) && this.tag && this.options_.autoplay && this.paused()) {\n      try {\n        // Chrome Fix. Fixed in Chrome v16.\n        delete this.tag.poster;\n      } catch (e) {\n        log('deleting tag.poster throws in some browsers', e);\n      }\n    }\n  };\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n\n    // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n    this.manualAutoplay_(this.autoplay());\n  };\n\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n\n\n  Player.prototype.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this4 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this4.muted();\n\n      _this4.muted(true);\n\n      var playPromise = _this4.play();\n\n      if (!playPromise || !playPromise.then || !playPromise['catch']) {\n        return;\n      }\n\n      return playPromise['catch'](function (e) {\n        // restore old value of muted on failure\n        _this4.muted(previouslyMuted);\n      });\n    };\n\n    var promise = void 0;\n\n    if (type === 'any') {\n      promise = this.play();\n\n      if (promise && promise.then && promise['catch']) {\n        promise['catch'](function () {\n          return muted();\n        });\n      }\n    } else if (type === 'muted') {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!promise || !promise.then || !promise['catch']) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this4.trigger({ type: 'autoplay-success', autoplay: type });\n    })['catch'](function (e) {\n      _this4.trigger({ type: 'autoplay-failure', autoplay: type });\n    });\n  };\n\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n\n\n  Player.prototype.updateSourceCaches_ = function updateSourceCaches_() {\n    var srcObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    }\n\n    // make sure all the caches are set to default values\n    // to prevent null checking\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || [];\n\n    // try to get the type of the src that was passed in\n    if (src && !type) {\n      type = findMimetype(this, src);\n    }\n\n    // update `currentSource` cache always\n    this.cache_.source = mergeOptions({}, srcObj, { src: src, type: type });\n\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    }\n\n    // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources;\n      // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    }\n\n    // update the tech `src` cache\n    this.cache_.src = src;\n  };\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n\n\n  Player.prototype.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this5 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      var updateSourceCaches = function updateSourceCaches(src) {\n        return _this5.updateSourceCaches_(src);\n      };\n      var playerSrc = this.currentSource().src;\n      var eventSrc = event.src;\n\n      // if we have a playerSrc that is not a blob, and a tech src that is a blob\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = function updateSourceCaches() {};\n        }\n      }\n\n      // update the source to the intial source right away\n      // in some cases this will be empty string\n      updateSourceCaches(eventSrc);\n\n      // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            var techSrc = _this5.techGet('currentSrc');\n\n            _this5.lastSource_.tech = techSrc;\n            _this5.updateSourceCaches_(techSrc);\n          }\n\n          _this5.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n    this.lastSource_ = { player: this.currentSource().src, tech: event.src };\n\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  };\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n\n\n  Player.prototype.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  };\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n    this.trigger('play');\n  };\n\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n\n\n  Player.prototype.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n    this.trigger('ratechange');\n  };\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n\n\n  Player.prototype.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this6 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n    this.trigger('waiting');\n    this.one('timeupdate', function () {\n      return _this6.removeClass('vjs-waiting');\n    });\n  };\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplay');\n  };\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplaythrough');\n  };\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n    this.trigger('playing');\n  };\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeking');\n  };\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeked');\n  };\n\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n\n\n  Player.prototype.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n    this.trigger('firstplay');\n  };\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n\n\n  Player.prototype.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n    this.trigger('pause');\n  };\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n\n\n  Player.prototype.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n    this.trigger('ended');\n  };\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  };\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mousedown\n   * @private\n   */\n\n\n  Player.prototype.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  };\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n\n\n  Player.prototype.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  };\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  };\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  };\n\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  };\n\n  /**\n   * Fired when the player switches in or out of fullscreen mode\n   *\n   * @private\n   * @listens Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleFullscreenChange_ = function handleFullscreenChange_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  };\n\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n\n\n  Player.prototype.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  };\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('fullscreenchange');\n  };\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n\n\n  Player.prototype.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n\n    this.error(error);\n  };\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n\n\n  Player.prototype.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n    this.trigger('textdata', data);\n  };\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n\n\n  Player.prototype.getCache = function getCache() {\n    return this.cache_;\n  };\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n\n\n  Player.prototype.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set$1(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log(e);\n        throw e;\n      }\n    }, true);\n  };\n\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n\n\n  Player.prototype.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get$1(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log('Video.js: ' + method + ' method not defined for ' + this.techName_ + ' playback technology.', e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log('Video.js: ' + method + ' unavailable on ' + this.techName_ + ' playback technology element.', e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log(e);\n      throw e;\n    }\n  };\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n\n\n  Player.prototype.play = function play() {\n    var _this7 = this;\n\n    var PromiseClass = this.options_.Promise || window.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this7.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  };\n\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n\n\n  Player.prototype.play_ = function play_() {\n    var _this8 = this;\n\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : silencePromise;\n\n    // If this is called while we have a play queued up on a loadstart, remove\n    // that listener to avoid getting in a potentially bad state.\n    if (this.playOnLoadstart_) {\n      this.off('loadstart', this.playOnLoadstart_);\n    }\n\n    // If the player/tech is not ready, queue up another call to `play()` for\n    // when it is. This will loop back into this method for another attempt at\n    // playback when the tech is ready.\n    if (!this.isReady_) {\n\n      // Bail out if we're already waiting for `ready`!\n      if (this.playWaitingForReady_) {\n        return;\n      }\n\n      this.playWaitingForReady_ = true;\n      this.ready(function () {\n        _this8.playWaitingForReady_ = false;\n        callback(_this8.play());\n      });\n\n      // If the player/tech is ready and we have a source, we can attempt playback.\n    } else if (!this.changingSrc_ && (this.src() || this.currentSrc())) {\n      callback(this.techGet_('play'));\n      return;\n\n      // If the tech is ready, but we do not have a source, we'll need to wait\n      // for both the `ready` and a `loadstart` when the source is finally\n      // resolved by middleware and set on the player.\n      //\n      // This can happen if `play()` is called while changing sources or before\n      // one has been set on the player.\n    } else {\n\n      this.playOnLoadstart_ = function () {\n        _this8.playOnLoadstart_ = null;\n        callback(_this8.play());\n      };\n\n      this.one('loadstart', this.playOnLoadstart_);\n    }\n  };\n\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n\n\n  Player.prototype.pause = function pause() {\n    this.techCall_('pause');\n  };\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n\n\n  Player.prototype.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  };\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n\n\n  Player.prototype.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  };\n\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        wether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n\n\n  Player.prototype.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  };\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n\n\n  Player.prototype.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    }\n\n    // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  };\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n\n\n  Player.prototype.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds);\n\n    // Standardize on Inifity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      /**\n       * @event Player#durationchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('durationchange');\n    }\n  };\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  };\n\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  };\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n\n\n  Player.prototype.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  };\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is bufferred 0 being 0% and 1 being 100%\n   */\n\n\n  Player.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  };\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n\n\n  Player.prototype.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  };\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n\n\n  Player.prototype.volume = function volume(percentAsDecimal) {\n    var vol = void 0;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  };\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n\n\n  Player.prototype.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  };\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on intial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n\n\n  Player.prototype.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  };\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n\n\n  Player.prototype.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  };\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n\n\n  Player.prototype.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  };\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n\n\n  Player.prototype.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      return;\n    }\n    return !!this.isFullscreen_;\n  };\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.requestFullscreen = function requestFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(true);\n\n    if (fsApi.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, fsApi.fullscreenchange, bind(this, function documentFullscreenChange(e) {\n        this.isFullscreen(document[fsApi.fullscreenElement]);\n\n        // If cancelling fullscreen, remove event listener.\n        if (this.isFullscreen() === false) {\n          off(document, fsApi.fullscreenchange, documentFullscreenChange);\n        }\n        /**\n         * @event Player#fullscreenchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('fullscreenchange');\n      }));\n\n      this.el_[fsApi.requestFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.exitFullscreen = function exitFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(false);\n\n    // Check for browser element fullscreen support\n    if (fsApi.requestFullscreen) {\n      document[fsApi.exitFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n\n\n  Player.prototype.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document, 'keydown', bind(this, this.fullWindowOnEscKey));\n\n    // Hide any scroll bars\n    document.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('enterFullWindow');\n  };\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n\n\n  Player.prototype.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (event.keyCode === 27) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  };\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n\n\n  Player.prototype.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.fullWindowOnEscKey);\n\n    // Unhide scroll bars.\n    document.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('exitFullWindow');\n  };\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Player.prototype.canPlayType = function canPlayType(type) {\n    var can = void 0;\n\n    // Loop through each playback technology in the options order\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n\n\n  Player.prototype.selectSource = function selectSource(sources) {\n    var _this9 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found = void 0;\n\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n\n      return found;\n    };\n\n    var foundSourceAndTech = void 0;\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this9.options_[techName.toLowerCase()])) {\n        return { source: source, tech: techName };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  };\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n\n\n  Player.prototype.src = function src(source) {\n    var _this10 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    var sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n      }, 0);\n      return;\n    }\n\n    // intial sources\n    this.changingSrc_ = true;\n\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]);\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this10.middleware_ = mws;\n\n      // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n      _this10.cache_.sources = sources;\n      _this10.updateSourceCaches_(middlewareSource);\n\n      var err = _this10.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this10.src(sources.slice(1));\n        }\n\n        _this10.changingSrc_ = false;\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        _this10.setTimeout(function () {\n          this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        _this10.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this10.tech_);\n    });\n  };\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates wether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {Boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n\n\n  Player.prototype.src_ = function src_(source) {\n    var _this11 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this11.changingSrc_ = false;\n      });\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n    this.ready(function () {\n\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n\n    return false;\n  };\n\n  /**\n   * Begin loading the src data.\n   */\n\n\n  Player.prototype.load = function load() {\n    this.techCall_('load');\n  };\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n\n\n  Player.prototype.reset = function reset() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n  };\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n\n\n  Player.prototype.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  };\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n\n\n  Player.prototype.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  };\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjuction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n\n\n  Player.prototype.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  };\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n\n\n  Player.prototype.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  };\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false maens that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n\n\n  Player.prototype.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  };\n\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n\n\n  Player.prototype.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay = void 0;\n\n    // if the value is a valid string set it to that\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false;\n\n      // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false;\n\n      // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = techAutoplay || this.options_.autoplay;\n\n    // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  };\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n\n\n  Player.prototype.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n    return this.techGet_('playsinline');\n  };\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {string}\n   *         The current value of loop when getting\n   */\n\n\n  Player.prototype.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  };\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n\n\n  Player.prototype.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('posterchange');\n  };\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  };\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n\n\n  Player.prototype.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  };\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n\n\n  Player.prototype.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  };\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n\n\n  Player.prototype.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // ie8 just logs \"[object object]\" if you just log the error object\n    log.error('(CODE:' + this.error_.code + ' ' + MediaError.errorTypes[this.error_.code] + ')', this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n    this.trigger('error');\n\n    return;\n  };\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n\n\n  Player.prototype.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  };\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n\n\n  Player.prototype.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('userinactive');\n  };\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n\n\n  Player.prototype.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress = void 0;\n    var lastMoveX = void 0;\n    var lastMoveY = void 0;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    var inactivityTimeout = void 0;\n\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  };\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n\n\n  Player.prototype.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the intial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n\n\n  Player.prototype.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n\n\n  Player.prototype.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  };\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n\n\n  Player.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  };\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Player.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  };\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n\n\n  Player.prototype.removeRemoteTextTrack = function removeRemoteTextTrack() {\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref3$track = _ref3.track,\n        track = _ref3$track === undefined ? arguments[0] : _ref3$track;\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n\n\n  Player.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  };\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n\n\n  Player.prototype.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  };\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n\n\n  Player.prototype.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  };\n\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the lanugage\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n\n\n  Player.prototype.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  };\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n\n\n  Player.prototype.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  };\n\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n\n\n  Player.prototype.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  };\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n\n\n  Player.prototype.createModal = function createModal(content, options) {\n    var _this12 = this;\n\n    options = options || {};\n    options.content = content || '';\n\n    var modal = new ModalDialog(this, options);\n\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this12.removeChild(modal);\n    });\n\n    modal.open();\n    return modal;\n  };\n\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n\n\n  Player.prototype.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n\n    var currentBreakpoint = this.currentBreakpoint();\n    var currentWidth = this.currentWidth();\n\n    for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      var candidateBreakpoint = BREAKPOINT_ORDER[i];\n      var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n      if (currentWidth <= maxWidth) {\n\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        }\n\n        // Only remove a class if there is a current breakpoint.\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  };\n\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n\n\n  Player.prototype.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n    var className = this.currentBreakpointClass();\n\n    this.breakpoint_ = '';\n\n    if (className) {\n      this.removeClass(className);\n    }\n  };\n\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n\n\n  Player.prototype.breakpoints = function breakpoints(_breakpoints) {\n\n    // Used as a getter.\n    if (_breakpoints === undefined) {\n      return assign(this.breakpoints_);\n    }\n\n    this.breakpoint_ = '';\n    this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints);\n\n    // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n    this.updateCurrentBreakpoint_();\n\n    // Clone the breakpoints before returning.\n    return assign(this.breakpoints_);\n  };\n\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n\n\n  Player.prototype.responsive = function responsive(value) {\n\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n\n    value = Boolean(value);\n    var current = this.responsive_;\n\n    // Nothing changed.\n    if (value === current) {\n      return;\n    }\n\n    // The value actually changed, set it.\n    this.responsive_ = value;\n\n    // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n    if (value) {\n      this.on('playerresize', this.updateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_();\n\n      // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.updateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n\n    return value;\n  };\n\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n\n\n  Player.prototype.currentBreakpoint = function currentBreakpoint() {\n    return this.breakpoint_;\n  };\n\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n\n\n  Player.prototype.currentBreakpointClass = function currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  };\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log.error(err);\n      }\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  };\n\n  /**\n   * Determine wether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n\n\n  Player.prototype.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i');\n\n    // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style ||\n    // IE10-specific (2012 flex spec)\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name$$1) {\n  var props = ALL[name$$1];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Global player list\n *\n * @type {Object}\n */\nPlayer.players = {};\n\nvar navigator = window.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n\n  html5: {},\n  flash: {},\n\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'controlBar', 'errorDisplay', 'textTrackSettings'],\n\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n\n  // locales and their language translations\n  languages: {},\n\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n\n  breakpoints: {},\n  responsive: false\n};\n\nif (!IS_IE8) {\n  Player.prototype.options_.children.push('resizeManager');\n}\n\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\n\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype['handleTech' + toTitleCase(event) + '_'] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nvar BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nvar pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {boolean}\n *          Whether or not the plugin has been registered.\n */\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {Function|undefined}\n *          The plugin (or undefined).\n */\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {Boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @returns {Function}\n *          A wrapper function for the given plugin.\n */\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: null }, true);\n\n    var instance = plugin.apply(this, arguments);\n\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: instance });\n\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @returns {Function}\n */\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n\n  return function () {\n    triggerSetupEvent(this, { name: name, plugin: PluginSubClass, instance: null }, true);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = new (Function.prototype.bind.apply(PluginSubClass, [null].concat([this].concat(args))))();\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\nvar Plugin = function () {\n\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    classCallCheck(this, Plugin);\n\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player;\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = bind(this, this.dispose);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  Plugin.prototype.version = function version() {\n    return this.constructor.VERSION;\n  };\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @returns {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n\n\n  Plugin.prototype.getEventHash = function getEventHash() {\n    var hash = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  };\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @returns {boolean}\n   *          Whether or not default was prevented.\n   */\n\n\n  Plugin.prototype.trigger = function trigger$$1(event) {\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  };\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n\n\n  Plugin.prototype.handleStateChanged = function handleStateChanged(e) {};\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n\n\n  Plugin.prototype.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  };\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @returns {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  };\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @returns {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error('Illegal plugin name, \"' + name + '\", must be a string, was ' + (typeof name === 'undefined' ? 'undefined' : _typeof(name)) + '.');\n    }\n\n    if (pluginExists(name)) {\n      log.warn('A plugin named \"' + name + '\" already exists. You may want to avoid re-registering plugins!');\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error('Illegal plugin name, \"' + name + '\", cannot share a name with an existing player method!');\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error('Illegal plugin for \"' + name + '\", must be a function, was ' + (typeof plugin === 'undefined' ? 'undefined' : _typeof(plugin)) + '.');\n    }\n\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  };\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param {string} name\n   *        The name of the plugin to be deregistered.\n   */\n\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  };\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @returns {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n\n\n  Plugin.getPlugins = function getPlugins() {\n    var names = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.keys(pluginStorage);\n\n    var result = void 0;\n\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n\n    return result;\n  };\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @returns {string}\n   *          The plugin's version or an empty string.\n   */\n\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\n\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n\n/**\n * Function for subclassing using the same inheritance that\n * videojs uses internally\n *\n * @static\n * @const\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @param {Object} [subClassMethods={}]\n *        The class to inherit to\n *\n * @return {Object}\n *         The new object with subClassMethods that inherited superClass.\n */\nvar extendFn = function extendFn(superClass) {\n  var subClassMethods = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if ((typeof subClassMethods === 'undefined' ? 'undefined' : _typeof(subClassMethods)) === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass);\n\n  // Extend subObj's prototype with functions and other properties from props\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n// Include the built-in techs\n// HTML5 Element Shim for IE8\nif (typeof HTMLVideoElement === 'undefined' && isReal()) {\n  document.createElement('video');\n  document.createElement('audio');\n  document.createElement('track');\n  document.createElement('video-js');\n}\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @returns {string}\n *          The string, without any leading `#`.\n */\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n\n/**\n * Doubles as the main function for users to create a player instance and also\n * the main library object.\n * The `videojs` function can be used to initialize or retrieve a player.\n  *\n * @param {string|Element} id\n *        Video element or video element ID\n *\n * @param {Object} [options]\n *        Optional options object for config/settings\n *\n * @param {Component~ReadyCallback} [ready]\n *        Optional ready callback\n *\n * @return {Player}\n *         A player instance\n */\nfunction videojs(id, options, ready) {\n  var player = videojs.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log.warn('Player \"' + id + '\" is already initialised. Options will not be applied.');\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  if (!document.body.contains(el)) {\n    log.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n\n  videojs.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  var PlayerComponent = Component.getComponent('Player');\n\n  player = new PlayerComponent(el, options, ready);\n\n  videojs.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n\n  return player;\n}\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n */\nvideojs.hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n * @function videojs.hooks\n *\n * @param {string} type\n *        the lifecyle to get hooks from\n *\n * @param {Function|Function[]} [fn]\n *        Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nvideojs.hooks = function (type, fn) {\n  videojs.hooks_[type] = videojs.hooks_[type] || [];\n  if (fn) {\n    videojs.hooks_[type] = videojs.hooks_[type].concat(fn);\n  }\n  return videojs.hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs.hook = function (type, fn) {\n  videojs.hooks(type, fn);\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs.hookOnce = function (type, fn) {\n  videojs.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs.removeHook(type, wrapper);\n      return original.apply(undefined, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle that the function hooked to\n *\n * @param {Function} fn\n *        The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nvideojs.removeHook = function (type, fn) {\n  var index = videojs.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs.hooks_[type] = videojs.hooks_[type].slice();\n  videojs.hooks_[type].splice(index, 1);\n\n  return true;\n};\n\n// Add default styles\nif (window.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style = $('.vjs-styles-defaults');\n\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n    setTextContent(style, '\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    ');\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs);\n\n/**\n * Current software version. Follows semver.\n *\n * @type {string}\n */\nvideojs.VERSION = version;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs.getPlayers = function () {\n  return Player.players;\n};\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @returns {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs.getPlayer = function (id) {\n  var players = Player.players;\n  var tag = void 0;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs.getAllPlayers = function () {\n  return (\n\n    // Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\n/**\n * Expose players object.\n *\n * @memberOf videojs\n * @property {Object} players\n */\nvideojs.players = Player.players;\n\n/**\n * Get a component class object by name\n *\n * @borrows Component.getComponent as videojs.getComponent\n */\nvideojs.getComponent = Component.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\nvideojs.registerComponent = function (name$$1, comp) {\n  if (Tech.isTech(comp)) {\n    log.warn('The ' + name$$1 + ' tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)');\n  }\n\n  Component.registerComponent.call(Component, name$$1, comp);\n};\n\n/**\n * Get a Tech class object by name\n *\n * @borrows Tech.getTech as videojs.getTech\n */\nvideojs.getTech = Tech.getTech;\n\n/**\n * Register a Tech so it can referred to by name.\n * This is used in the tech order for the player.\n *\n * @borrows Tech.registerTech as videojs.registerTech\n */\nvideojs.registerTech = Tech.registerTech;\n\n/**\n * Register a middleware to a source type.\n *\n * @param {String} type A string representing a MIME type.\n * @param {function(player):object} middleware A middleware factory that takes a player.\n */\nvideojs.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @memberOf {videojs}\n * @property {object} middleware.TERMINATOR\n */\n// Object.defineProperty is not available in IE8\nif (!IS_IE8 && Object.defineProperty) {\n  Object.defineProperty(videojs, 'middleware', {\n    value: {},\n    writeable: false,\n    enumerable: true\n  });\n\n  Object.defineProperty(videojs.middleware, 'TERMINATOR', {\n    value: TERMINATOR,\n    writeable: false,\n    enumerable: true\n  });\n} else {\n  videojs.middleware = { TERMINATOR: TERMINATOR };\n}\n\n/**\n * A suite of browser and device tests from {@link browser}.\n *\n * @type {Object}\n * @private\n */\nvideojs.browser = browser;\n\n/**\n * Whether or not the browser supports touch events. Included for backward\n * compatibility with 4.x, but deprecated. Use `videojs.browser.TOUCH_ENABLED`\n * instead going forward.\n *\n * @deprecated since version 5.0\n * @type {boolean}\n */\nvideojs.TOUCH_ENABLED = TOUCH_ENABLED;\n\n/**\n * Subclass an existing class\n * Mimics ES6 subclassing with the `extend` keyword\n *\n * @borrows extend:extendFn as videojs.extend\n */\nvideojs.extend = extendFn;\n\n/**\n * Merge two options objects recursively\n * Performs a deep merge like lodash.merge but **only merges plain objects**\n * (not arrays, elements, anything else)\n * Other values will be copied directly from the second object.\n *\n * @borrows merge-options:mergeOptions as videojs.mergeOptions\n */\nvideojs.mergeOptions = mergeOptions;\n\n/**\n * Change the context (this) of a function\n *\n * > NOTE: as of v5.0 we require an ES5 shim, so you should use the native\n * `function() {}.bind(newContext);` instead of this.\n *\n * @borrows fn:bind as videojs.bind\n */\nvideojs.bind = bind;\n\n/**\n * Register a Video.js plugin.\n *\n * @borrows plugin:registerPlugin as videojs.registerPlugin\n * @method registerPlugin\n *\n * @param  {string} name\n *         The name of the plugin to be registered. Must be a string and\n *         must not match an existing plugin or a method on the `Player`\n *         prototype.\n *\n * @param  {Function} plugin\n *         A sub-class of `Plugin` or a function for basic plugins.\n *\n * @return {Function}\n *         For advanced plugins, a factory function for that plugin. For\n *         basic plugins, a wrapper function that initializes the plugin.\n */\nvideojs.registerPlugin = Plugin.registerPlugin;\n\n/**\n * Deregister a Video.js plugin.\n *\n * @borrows plugin:deregisterPlugin as videojs.deregisterPlugin\n * @method deregisterPlugin\n *\n * @param  {string} name\n *         The name of the plugin to be deregistered. Must be a string and\n *         must match an existing plugin or a method on the `Player`\n *         prototype.\n *\n */\nvideojs.deregisterPlugin = Plugin.deregisterPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated\n *        videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\nvideojs.plugin = function (name$$1, plugin) {\n  log.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name$$1, plugin);\n};\n\n/**\n * Gets an object containing multiple Video.js plugins.\n *\n * @param  {Array} [names]\n *         If provided, should be an array of plugin names. Defaults to _all_\n *         plugin names.\n *\n * @return {Object|undefined}\n *         An object containing plugin(s) associated with their name(s) or\n *         `undefined` if no matching plugins exist).\n */\nvideojs.getPlugins = Plugin.getPlugins;\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {Function|undefined}\n *         The plugin (or `undefined`).\n */\nvideojs.getPlugin = Plugin.getPlugin;\n\n/**\n * Gets a plugin's version, if available\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {string}\n *         The plugin's version or an empty string.\n */\nvideojs.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n\n  videojs.options.languages = mergeOptions(videojs.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n\n  return videojs.options.languages[code];\n};\n\n/**\n * Log messages\n *\n * @borrows log:log as videojs.log\n */\nvideojs.log = log;\nvideojs.createLogger = createLogger;\n\n/**\n * Creates an emulated TimeRange object.\n *\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRange\n */\n/**\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRanges\n */\nvideojs.createTimeRange = videojs.createTimeRanges = createTimeRanges;\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS\n * Supplying a guide (in seconds) will force a number of leading zeros\n * to cover the length of the guide\n *\n * @borrows format-time:formatTime as videojs.formatTime\n */\nvideojs.formatTime = formatTime;\n\n/**\n * Replaces format-time with a custom implementation, to be used in place of the default.\n *\n * @borrows format-time:setFormatTime as videojs.setFormatTime\n *\n * @method setFormatTime\n *\n * @param {Function} customFn\n *        A custom format-time function which will be called with the current time and guide (in seconds) as arguments.\n *        Passed fn should return a string.\n */\nvideojs.setFormatTime = setFormatTime;\n\n/**\n * Resets format-time to the default implementation.\n *\n * @borrows format-time:resetFormatTime as videojs.resetFormatTime\n *\n * @method resetFormatTime\n */\nvideojs.resetFormatTime = resetFormatTime;\n\n/**\n * Resolve and parse the elements of a URL\n *\n * @borrows url:parseUrl as videojs.parseUrl\n *\n */\nvideojs.parseUrl = parseUrl;\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @borrows url:isCrossOrigin as videojs.isCrossOrigin\n */\nvideojs.isCrossOrigin = isCrossOrigin;\n\n/**\n * Event target class.\n *\n * @borrows EventTarget as videojs.EventTarget\n */\nvideojs.EventTarget = EventTarget;\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @borrows events:on as videojs.on\n */\nvideojs.on = on;\n\n/**\n * Trigger a listener only once for an event\n *\n * @borrows events:one as videojs.one\n */\nvideojs.one = one;\n\n/**\n * Removes event listeners from an element\n *\n * @borrows events:off as videojs.off\n */\nvideojs.off = off;\n\n/**\n * Trigger an event for an element\n *\n * @borrows events:trigger as videojs.trigger\n */\nvideojs.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper. Here's a simple example:\n *\n * @param {Object} options\n *        settings for the request.\n *\n * @return {XMLHttpRequest|XDomainRequest}\n *         The request object.\n *\n * @see https://github.com/Raynos/xhr\n */\nvideojs.xhr = xhr;\n\n/**\n * TextTrack class\n *\n * @borrows TextTrack as videojs.TextTrack\n */\nvideojs.TextTrack = TextTrack;\n\n/**\n * export the AudioTrack class so that source handlers can create\n * AudioTracks and then add them to the players AudioTrackList\n *\n * @borrows AudioTrack as videojs.AudioTrack\n */\nvideojs.AudioTrack = AudioTrack;\n\n/**\n * export the VideoTrack class so that source handlers can create\n * VideoTracks and then add them to the players VideoTrackList\n *\n * @borrows VideoTrack as videojs.VideoTrack\n */\nvideojs.VideoTrack = VideoTrack;\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @borrows dom:isEl as videojs.isEl\n * @deprecated Use videojs.dom.isEl() instead\n */\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @borrows dom:isTextNode as videojs.isTextNode\n * @deprecated Use videojs.dom.isTextNode() instead\n */\n\n/**\n * Creates an element and applies properties.\n *\n * @borrows dom:createEl as videojs.createEl\n * @deprecated Use videojs.dom.createEl() instead\n */\n\n/**\n * Check if an element has a CSS class\n *\n * @borrows dom:hasElClass as videojs.hasClass\n * @deprecated Use videojs.dom.hasClass() instead\n */\n\n/**\n * Add a CSS class name to an element\n *\n * @borrows dom:addElClass as videojs.addClass\n * @deprecated Use videojs.dom.addClass() instead\n */\n\n/**\n * Remove a CSS class name from an element\n *\n * @borrows dom:removeElClass as videojs.removeClass\n * @deprecated Use videojs.dom.removeClass() instead\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @borrows dom:toggleElClass as videojs.toggleClass\n * @deprecated Use videojs.dom.toggleClass() instead\n */\n\n/**\n * Apply attributes to an HTML element.\n *\n * @borrows dom:setElAttributes as videojs.setAttribute\n * @deprecated Use videojs.dom.setAttributes() instead\n */\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @borrows dom:getElAttributes as videojs.getAttributes\n * @deprecated Use videojs.dom.getAttributes() instead\n */\n\n/**\n * Empties the contents of an element.\n *\n * @borrows dom:emptyEl as videojs.emptyEl\n * @deprecated Use videojs.dom.emptyEl() instead\n */\n\n/**\n * Normalizes and appends content to an element.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:appendContents as videojs.appendContet\n * @deprecated Use videojs.dom.appendContent() instead\n */\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:insertContent as videojs.insertContent\n * @deprecated Use videojs.dom.insertContent() instead\n */\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs[k] = function () {\n    log.warn('videojs.' + k + '() is deprecated; use videojs.dom.' + k + '() instead');\n    return Dom[k].apply(null, arguments);\n  };\n});\n\n/**\n * A safe getComputedStyle with an IE8 fallback.\n *\n * This is because in Firefox, if the player is loaded in an iframe with `display:none`,\n * then `getComputedStyle` returns `null`, so, we do a null-check to make sure\n * that the player doesn't break in these cases.\n * See https://bugzilla.mozilla.org/show_bug.cgi?id=548397 for more details.\n *\n * @borrows computed-style:computedStyle as videojs.computedStyle\n */\nvideojs.computedStyle = computedStyle;\n\n/**\n * Export the Dom utilities for use in external plugins\n * and Tech's\n */\nvideojs.dom = Dom;\n\n/**\n * Export the Url utilities for use in external plugins\n * and Tech's\n */\nvideojs.url = Url;\n\nmodule.exports = videojs;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"animeDetail\"},[_c('video-player',{ref:\"videoPlayer\",staticClass:\"video-player-box\",attrs:{\"options\":_vm.playerOptions,\"playsinline\":true}}),(_vm.list[0])?_c('div',{staticClass:\"animeDetail-tip\"},[_vm._v(\"\\n       ↑↑↑↑如果手机浏览器给你省流量，请手动点击播放。还有，带宽就100K，要多等会儿的。\\n  \")]):_vm._e(),(_vm.list[0])?_c('div',{staticClass:\"ans-box\"},_vm._l((_vm.list),function(item,index){return _c('div',{key:index,staticClass:\"ans-box-item\",on:{\"click\":function($event){return _vm.sele(item)}}},[_vm._v(\"\\n      \"+_vm._s(item.substring(0,item.indexOf(\".\")))+\"\\n    \")])}),0):_vm._e(),(!_vm.list[0])?_c('div',[_vm._v(\"暂无内容\")]):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"animeDetail\">\r\n    <video-player  class=\"video-player-box\"\r\n                  ref=\"videoPlayer\"\r\n                  :options=\"playerOptions\"\r\n                  :playsinline=\"true\"\r\n                  >\r\n    </video-player> \r\n    <div v-if=\"list[0]\" class=\"animeDetail-tip\">\r\n      &nbsp;&nbsp;&nbsp;↑↑↑↑如果手机浏览器给你省流量，请手动点击播放。还有，带宽就100K，要多等会儿的。\r\n    </div>\r\n    <div class=\"ans-box\" v-if=\"list[0]\">\r\n      <div class=\"ans-box-item\" v-for=\"(item,index) in list\" :key=\"index\" @click=\"sele(item)\">\r\n        {{item.substring(0,item.indexOf(\".\"))}}\r\n      </div>\r\n    </div>\r\n    <div v-if=\"!list[0]\">暂无内容</div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport 'video.js/dist/video-js.css'\r\nimport { videoPlayer } from 'vue-video-player'\r\nimport {getAnime} from '@/api';\r\nexport default {\r\n  components: {\r\n    videoPlayer\r\n  },\r\n  data(){\r\n    return{\r\n      id:'',\r\n      list:[],\r\n        playerOptions: {\r\n          autoplay:true,\r\n          muted: false,\r\n          loop: false,\r\n          preload: 'auto',\r\n          language: 'zh-CN',\r\n          aspectRatio: '16:9',\r\n          fluid: true,\r\n          playbackRates: [0.7, 1.0, 1.5, 2.0],\r\n          sources: [{\r\n            type: \"video/mp4\",\r\n            src: \"\"\r\n          }],\r\n          poster: \"\",\r\n          controlBar: {\r\n            timeDivider: true,\r\n            durationDisplay: true,\r\n            remainingTimeDisplay: false,\r\n            fullscreenToggle: true  //全屏按钮\r\n          }          \r\n        }\r\n    }\r\n  },\r\n  computed: {\r\n    player() {\r\n      return this.$refs.videoPlayer.player\r\n    }\r\n  },  \r\n  created(){\r\n    const self=this;\r\n    this.id=this.$route.query.id;\r\n    console.log(this.id);\r\n    getAnime({\r\n      id:self.id,\r\n    }).then((d)=>{\r\n      console.log(d.data.data);\r\n      self.list=d.data.data;\r\n      self.list.sort();\r\n      self.sele(self.list[0]);\r\n    }).catch((d)=>{\r\n \r\n    })\r\n  },\r\n  methods:{\r\n    //http://118.31.62.251:8081\r\n    sele(d){\r\n      this.playerOptions.sources[0].src='/apis/syf/video/'+this.id+'/'+d;\r\n      console.log(this.playerOptions.sources[0].src)\r\n    }\r\n  }  \r\n}\r\n</script>\r\n<style lang=\"scss\">\r\n.animeDetail{\r\n  .animeDetail-tip{\r\n    font-size: 12px;\r\n  }\r\n  .ans-box{\r\n    width: 100%;\r\n    padding: 15px;\r\n    box-sizing:border-box;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-around;\r\n    .ans-box-item{\r\n      width:100px;\r\n      height: 30px;\r\n      box-shadow: 0 2px 2px 2px rgba(49, 49, 49, 0.2);\r\n      text-align: center;\r\n      line-height: 30px;\r\n      border-radius:3px;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n      white-space: nowrap;\r\n      margin:10px 0; \r\n    }\r\n  }\r\n  .video-player-box{\r\n    width: 100%;\r\n  }  \r\n}\r\n\r\n</style>\r\n\r\n\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./animeDetail.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./animeDetail.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./animeDetail.vue?vue&type=template&id=2b5c8510&\"\nimport script from \"./animeDetail.vue?vue&type=script&lang=js&\"\nexport * from \"./animeDetail.vue?vue&type=script&lang=js&\"\nimport style0 from \"./animeDetail.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","module.exports = function isPrimitive(value) {\n\treturn value === null || (typeof value !== 'function' && typeof value !== 'object');\n};\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","'use strict';\n\nvar bind = require('function-bind');\nvar ES = require('es-abstract/es5');\nvar replace = bind.call(Function.call, String.prototype.replace);\n\nvar leftWhitespace = /^[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+/;\nvar rightWhitespace = /[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+$/;\n\nmodule.exports = function trim() {\n\tvar S = ES.ToString(ES.CheckObjectCoercible(this));\n\treturn replace(replace(S, leftWhitespace, ''), rightWhitespace, '');\n};\n","module.exports = function sign(number) {\n\treturn number >= 0 ? 1 : -1;\n};\n","var trim = require('string.prototype.trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n","'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": true,\n  \"lr\": true,\n  \"rl\": true\n};\nvar alignSetting = {\n  \"start\": true,\n  \"middle\": true,\n  \"end\": true,\n  \"left\": true,\n  \"right\": true\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction extend(obj) {\n  var i = 1;\n  for (; i < arguments.length; i++) {\n    var cobj = arguments[i];\n    for (var p in cobj) {\n      obj[p] = cobj[p];\n    }\n  }\n\n  return obj;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  var cue = this;\n  var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\n  var baseObj = {};\n\n  if (isIE8) {\n    cue = document.createElement('custom');\n  } else {\n    baseObj.enumerable = true;\n  }\n\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  cue.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n\n  Object.defineProperty(cue,\n    \"id\", extend({}, baseObj, {\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"pauseOnExit\", extend({}, baseObj, {\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"startTime\", extend({}, baseObj, {\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"endTime\", extend({}, baseObj, {\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"text\", extend({}, baseObj, {\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"region\", extend({}, baseObj, {\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"vertical\", extend({}, baseObj, {\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"snapToLines\", extend({}, baseObj, {\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"line\", extend({}, baseObj, {\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"lineAlign\", extend({}, baseObj, {\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"position\", extend({}, baseObj, {\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"positionAlign\", extend({}, baseObj, {\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"size\", extend({}, baseObj, {\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"align\", extend({}, baseObj, {\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  cue.displayState = undefined;\n\n  if (isIE8) {\n    return cue;\n  }\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n","'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\nmodule.exports = function shimStringTrim() {\n\tvar polyfill = getPolyfill();\n\tdefine(String.prototype, { trim: polyfill }, { trim: function () { return String.prototype.trim !== polyfill; } });\n\treturn polyfill;\n};\n","module.exports = function mod(number, modulo) {\n\tvar remain = number % modulo;\n\treturn Math.floor(remain >= 0 ? remain : remain + modulo);\n};\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\n\nvar has = require('has');\n\nvar predicates = {\n  // https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n  'Property Descriptor': function isPropertyDescriptor(ES, Desc) {\n    if (ES.Type(Desc) !== 'Object') {\n      return false;\n    }\n    var allowed = {\n      '[[Configurable]]': true,\n      '[[Enumerable]]': true,\n      '[[Get]]': true,\n      '[[Set]]': true,\n      '[[Value]]': true,\n      '[[Writable]]': true\n    };\n\n    for (var key in Desc) { // eslint-disable-line\n      if (has(Desc, key) && !allowed[key]) {\n        return false;\n      }\n    }\n\n    var isData = has(Desc, '[[Value]]');\n    var IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n    if (isData && IsAccessor) {\n      throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n    }\n    return true;\n  }\n};\n\nmodule.exports = function assertRecord(ES, recordType, argumentName, value) {\n  var predicate = predicates[recordType];\n  if (typeof predicate !== 'function') {\n    throw new $SyntaxError('unknown record type: ' + recordType);\n  }\n  if (!predicate(ES, value)) {\n    throw new $TypeError(argumentName + ' must be a ' + recordType);\n  }\n  console.log(predicate(ES, value), value);\n};\n","var $isNaN = Number.isNaN || function (a) { return a !== a; };\n\nmodule.exports = Number.isFinite || function (x) { return typeof x === 'number' && !$isNaN(x) && x !== Infinity && x !== -Infinity; };\n","'use strict';\n\nvar bind = require('function-bind');\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar boundTrim = bind.call(Function.call, getPolyfill());\n\ndefine(boundTrim, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = boundTrim;\n","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200e\",\n  \"&rlm;\": \"\\u200f\",\n  \"&nbsp;\": \"\\u00a0\"\n};\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  // Unescape a string 's'.\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n  function unescape(s) {\n    while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n      s = s.replace(m[0], unescape1);\n    }\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\n  var color = \"rgba(255, 255, 255, 1)\";\n  var backgroundColor = \"rgba(0, 0, 0, 0.8)\";\n\n  if (isIE8) {\n    color = \"rgb(255, 255, 255)\";\n    backgroundColor = \"rgb(0, 0, 0)\";\n  }\n\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: color,\n    backgroundColor: backgroundColor,\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\"\n  };\n\n  if (!isIE8) {\n    styles.writingMode = cue.vertical === \"\" ? \"horizontal-tb\"\n                                             : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                                     : \"vertical-rl\";\n    styles.unicodeBidi = \"plaintext\";\n  }\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  if (!isIE8) {\n    styles.direction = determineBidi(this.cueDiv);\n    styles.writingMode = cue.vertical === \"\" ? \"horizontal-tb\"\n                                             : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                                     : \"vertical-rl\".\n    stylesunicodeBidi =  \"plaintext\";\n  }\n\n  this.applyStyles(styles);\n\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"middle\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\n\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n\n  if (isIE8 && !this.lineHeight) {\n    this.lineHeight = 13;\n  }\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"middle\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line;\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"video.js\")):\"function\"==typeof define&&define.amd?define([\"videojs\"],t):\"object\"==typeof exports?exports.VueVideoPlayer=t(require(\"video.js\")):e.VueVideoPlayer=t(e.videojs)}(this,function(e){return function(e){function t(i){if(n[i])return n[i].exports;var r=n[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var n={};return t.m=e,t.c=n,t.i=function(e){return e},t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:i})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p=\"/\",t(t.s=3)}([function(t,n){t.exports=e},function(e,t,n){\"use strict\";function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(t,\"__esModule\",{value:!0});var r=n(0),o=function(e){return e&&e.__esModule?e:{default:e}}(r),s=window.videojs||o.default;\"function\"!=typeof Object.assign&&Object.defineProperty(Object,\"assign\",{value:function(e,t){if(null==e)throw new TypeError(\"Cannot convert undefined or null to object\");for(var n=Object(e),i=1;i<arguments.length;i++){var r=arguments[i];if(null!=r)for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(n[o]=r[o])}return n},writable:!0,configurable:!0});var a=[\"loadeddata\",\"canplay\",\"canplaythrough\",\"play\",\"pause\",\"waiting\",\"playing\",\"ended\",\"error\"];t.default={name:\"video-player\",props:{start:{type:Number,default:0},crossOrigin:{type:String,default:\"\"},playsinline:{type:Boolean,default:!1},customEventName:{type:String,default:\"statechanged\"},options:{type:Object,required:!0},events:{type:Array,default:function(){return[]}},globalOptions:{type:Object,default:function(){return{controls:!0,controlBar:{remainingTimeDisplay:!1,playToggle:{},progressControl:{},fullscreenToggle:{},volumeMenuButton:{inline:!1,vertical:!0}},techOrder:[\"html5\"],plugins:{}}}},globalEvents:{type:Array,default:function(){return[]}}},data:function(){return{player:null,reseted:!0}},mounted:function(){this.player||this.initialize()},beforeDestroy:function(){this.player&&this.dispose()},methods:{initialize:function(){var e=this,t=Object.assign({},this.globalOptions,this.options);this.playsinline&&(this.$refs.video.setAttribute(\"playsinline\",this.playsinline),this.$refs.video.setAttribute(\"webkit-playsinline\",this.playsinline),this.$refs.video.setAttribute(\"x5-playsinline\",this.playsinline),this.$refs.video.setAttribute(\"x5-video-player-type\",\"h5\"),this.$refs.video.setAttribute(\"x5-video-player-fullscreen\",!1)),\"\"!==this.crossOrigin&&(this.$refs.video.crossOrigin=this.crossOrigin,this.$refs.video.setAttribute(\"crossOrigin\",this.crossOrigin));var n=function(t,n){t&&e.$emit(t,e.player),n&&e.$emit(e.customEventName,i({},t,n))};t.plugins&&delete t.plugins.__ob__;var r=this;this.player=s(this.$refs.video,t,function(){for(var e=this,t=a.concat(r.events).concat(r.globalEvents),i={},o=0;o<t.length;o++)\"string\"==typeof t[o]&&void 0===i[t[o]]&&function(t){i[t]=null,e.on(t,function(){n(t,!0)})}(t[o]);this.on(\"timeupdate\",function(){n(\"timeupdate\",this.currentTime())}),r.$emit(\"ready\",this)})},dispose:function(e){var t=this;this.player&&this.player.dispose&&(\"Flash\"!==this.player.techName_&&this.player.pause&&this.player.pause(),this.player.dispose(),this.player=null,this.$nextTick(function(){t.reseted=!1,t.$nextTick(function(){t.reseted=!0,t.$nextTick(function(){e&&e()})})}))}},watch:{options:{deep:!0,handler:function(e,t){var n=this;this.dispose(function(){e&&e.sources&&e.sources.length&&n.initialize()})}}}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var i=n(1),r=n.n(i);for(var o in i)[\"default\",\"default\"].indexOf(o)<0&&function(e){n.d(t,e,function(){return i[e]})}(o);var s=n(5),a=n(4),l=a(r.a,s.a,!1,null,null,null);t.default=l.exports},function(e,t,n){\"use strict\";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,\"__esModule\",{value:!0}),t.install=t.videoPlayer=t.videojs=void 0;var r=n(0),o=i(r),s=n(2),a=i(s),l=window.videojs||o.default,u=function(e,t){t&&(t.options&&(a.default.props.globalOptions.default=function(){return t.options}),t.events&&(a.default.props.globalEvents.default=function(){return t.events})),e.component(a.default.name,a.default)},d={videojs:l,videoPlayer:a.default,install:u};t.default=d,t.videojs=l,t.videoPlayer=a.default,t.install=u},function(e,t){e.exports=function(e,t,n,i,r,o){var s,a=e=e||{},l=typeof e.default;\"object\"!==l&&\"function\"!==l||(s=e,a=e.default);var u=\"function\"==typeof a?a.options:a;t&&(u.render=t.render,u.staticRenderFns=t.staticRenderFns,u._compiled=!0),n&&(u.functional=!0),r&&(u._scopeId=r);var d;if(o?(d=function(e){e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext,e||\"undefined\"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),i&&i.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(o)},u._ssrRegister=d):i&&(d=i),d){var c=u.functional,f=c?u.render:u.beforeCreate;c?(u._injectStyles=d,u.render=function(e,t){return d.call(t),f(e,t)}):u.beforeCreate=f?[].concat(f,d):[d]}return{esModule:s,exports:a,options:u}}},function(e,t,n){\"use strict\";var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return e.reseted?n(\"div\",{staticClass:\"video-player\"},[n(\"video\",{ref:\"video\",staticClass:\"video-js\"})]):e._e()},r=[],o={render:i,staticRenderFns:r};t.a=o}])});","'use strict';\n\n/* globals\n\tSet,\n\tMap,\n\tWeakSet,\n\tWeakMap,\n\n\tPromise,\n\n\tSymbol,\n\tProxy,\n\n\tAtomics,\n\tSharedArrayBuffer,\n\n\tArrayBuffer,\n\tDataView,\n\tUint8Array,\n\tFloat32Array,\n\tFloat64Array,\n\tInt8Array,\n\tInt16Array,\n\tInt32Array,\n\tUint8ClampedArray,\n\tUint16Array,\n\tUint32Array,\n*/\n\nvar undefined; // eslint-disable-line no-shadow-restricted-names\n\nvar ThrowTypeError = Object.getOwnPropertyDescriptor\n\t? (function () { return Object.getOwnPropertyDescriptor(arguments, 'callee').get; }())\n\t: function () { throw new TypeError(); };\n\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol';\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar generator; // = function * () {};\nvar generatorFunction = generator ? getProto(generator) : undefined;\nvar asyncFn; // async function() {};\nvar asyncFunction = asyncFn ? asyncFn.constructor : undefined;\nvar asyncGen; // async function * () {};\nvar asyncGenFunction = asyncGen ? getProto(asyncGen) : undefined;\nvar asyncGenIterator = asyncGen ? asyncGen() : undefined;\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'$ %Array%': Array,\n\t'$ %ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'$ %ArrayBufferPrototype%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer.prototype,\n\t'$ %ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'$ %ArrayPrototype%': Array.prototype,\n\t'$ %ArrayProto_entries%': Array.prototype.entries,\n\t'$ %ArrayProto_forEach%': Array.prototype.forEach,\n\t'$ %ArrayProto_keys%': Array.prototype.keys,\n\t'$ %ArrayProto_values%': Array.prototype.values,\n\t'$ %AsyncFromSyncIteratorPrototype%': undefined,\n\t'$ %AsyncFunction%': asyncFunction,\n\t'$ %AsyncFunctionPrototype%': asyncFunction ? asyncFunction.prototype : undefined,\n\t'$ %AsyncGenerator%': asyncGen ? getProto(asyncGenIterator) : undefined,\n\t'$ %AsyncGeneratorFunction%': asyncGenFunction,\n\t'$ %AsyncGeneratorPrototype%': asyncGenFunction ? asyncGenFunction.prototype : undefined,\n\t'$ %AsyncIteratorPrototype%': asyncGenIterator && hasSymbols && Symbol.asyncIterator ? asyncGenIterator[Symbol.asyncIterator]() : undefined,\n\t'$ %Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'$ %Boolean%': Boolean,\n\t'$ %BooleanPrototype%': Boolean.prototype,\n\t'$ %DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'$ %DataViewPrototype%': typeof DataView === 'undefined' ? undefined : DataView.prototype,\n\t'$ %Date%': Date,\n\t'$ %DatePrototype%': Date.prototype,\n\t'$ %decodeURI%': decodeURI,\n\t'$ %decodeURIComponent%': decodeURIComponent,\n\t'$ %encodeURI%': encodeURI,\n\t'$ %encodeURIComponent%': encodeURIComponent,\n\t'$ %Error%': Error,\n\t'$ %ErrorPrototype%': Error.prototype,\n\t'$ %eval%': eval, // eslint-disable-line no-eval\n\t'$ %EvalError%': EvalError,\n\t'$ %EvalErrorPrototype%': EvalError.prototype,\n\t'$ %Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'$ %Float32ArrayPrototype%': typeof Float32Array === 'undefined' ? undefined : Float32Array.prototype,\n\t'$ %Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'$ %Float64ArrayPrototype%': typeof Float64Array === 'undefined' ? undefined : Float64Array.prototype,\n\t'$ %Function%': Function,\n\t'$ %FunctionPrototype%': Function.prototype,\n\t'$ %Generator%': generator ? getProto(generator()) : undefined,\n\t'$ %GeneratorFunction%': generatorFunction,\n\t'$ %GeneratorPrototype%': generatorFunction ? generatorFunction.prototype : undefined,\n\t'$ %Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'$ %Int8ArrayPrototype%': typeof Int8Array === 'undefined' ? undefined : Int8Array.prototype,\n\t'$ %Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'$ %Int16ArrayPrototype%': typeof Int16Array === 'undefined' ? undefined : Int8Array.prototype,\n\t'$ %Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'$ %Int32ArrayPrototype%': typeof Int32Array === 'undefined' ? undefined : Int32Array.prototype,\n\t'$ %isFinite%': isFinite,\n\t'$ %isNaN%': isNaN,\n\t'$ %IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'$ %JSON%': JSON,\n\t'$ %JSONParse%': JSON.parse,\n\t'$ %Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'$ %MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'$ %MapPrototype%': typeof Map === 'undefined' ? undefined : Map.prototype,\n\t'$ %Math%': Math,\n\t'$ %Number%': Number,\n\t'$ %NumberPrototype%': Number.prototype,\n\t'$ %Object%': Object,\n\t'$ %ObjectPrototype%': Object.prototype,\n\t'$ %ObjProto_toString%': Object.prototype.toString,\n\t'$ %ObjProto_valueOf%': Object.prototype.valueOf,\n\t'$ %parseFloat%': parseFloat,\n\t'$ %parseInt%': parseInt,\n\t'$ %Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'$ %PromisePrototype%': typeof Promise === 'undefined' ? undefined : Promise.prototype,\n\t'$ %PromiseProto_then%': typeof Promise === 'undefined' ? undefined : Promise.prototype.then,\n\t'$ %Promise_all%': typeof Promise === 'undefined' ? undefined : Promise.all,\n\t'$ %Promise_reject%': typeof Promise === 'undefined' ? undefined : Promise.reject,\n\t'$ %Promise_resolve%': typeof Promise === 'undefined' ? undefined : Promise.resolve,\n\t'$ %Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'$ %RangeError%': RangeError,\n\t'$ %RangeErrorPrototype%': RangeError.prototype,\n\t'$ %ReferenceError%': ReferenceError,\n\t'$ %ReferenceErrorPrototype%': ReferenceError.prototype,\n\t'$ %Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'$ %RegExp%': RegExp,\n\t'$ %RegExpPrototype%': RegExp.prototype,\n\t'$ %Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'$ %SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'$ %SetPrototype%': typeof Set === 'undefined' ? undefined : Set.prototype,\n\t'$ %SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'$ %SharedArrayBufferPrototype%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer.prototype,\n\t'$ %String%': String,\n\t'$ %StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'$ %StringPrototype%': String.prototype,\n\t'$ %Symbol%': hasSymbols ? Symbol : undefined,\n\t'$ %SymbolPrototype%': hasSymbols ? Symbol.prototype : undefined,\n\t'$ %SyntaxError%': SyntaxError,\n\t'$ %SyntaxErrorPrototype%': SyntaxError.prototype,\n\t'$ %ThrowTypeError%': ThrowTypeError,\n\t'$ %TypedArray%': TypedArray,\n\t'$ %TypedArrayPrototype%': TypedArray ? TypedArray.prototype : undefined,\n\t'$ %TypeError%': TypeError,\n\t'$ %TypeErrorPrototype%': TypeError.prototype,\n\t'$ %Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'$ %Uint8ArrayPrototype%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array.prototype,\n\t'$ %Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'$ %Uint8ClampedArrayPrototype%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray.prototype,\n\t'$ %Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'$ %Uint16ArrayPrototype%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array.prototype,\n\t'$ %Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'$ %Uint32ArrayPrototype%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array.prototype,\n\t'$ %URIError%': URIError,\n\t'$ %URIErrorPrototype%': URIError.prototype,\n\t'$ %WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'$ %WeakMapPrototype%': typeof WeakMap === 'undefined' ? undefined : WeakMap.prototype,\n\t'$ %WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,\n\t'$ %WeakSetPrototype%': typeof WeakSet === 'undefined' ? undefined : WeakSet.prototype\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tvar key = '$ ' + name;\n\tif (!(key in INTRINSICS)) {\n\t\tthrow new SyntaxError('intrinsic ' + name + ' does not exist!');\n\t}\n\n\t// istanbul ignore if // hopefully this is impossible to test :-)\n\tif (typeof INTRINSICS[key] === 'undefined' && !allowMissing) {\n\t\tthrow new TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t}\n\treturn INTRINSICS[key];\n};\n","\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./animeDetail.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./animeDetail.vue?vue&type=style&index=0&lang=scss&\"","'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar origDefineProperty = Object.defineProperty;\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar arePropertyDescriptorsSupported = function () {\n\tvar obj = {};\n\ttry {\n\t\torigDefineProperty(obj, 'x', { enumerable: false, value: obj });\n\t\t// eslint-disable-next-line no-unused-vars, no-restricted-syntax\n\t\tfor (var _ in obj) { // jscs:ignore disallowUnusedVariables\n\t\t\treturn false;\n\t\t}\n\t\treturn obj.x === obj;\n\t} catch (e) { /* this is IE 8. */\n\t\treturn false;\n\t}\n};\nvar supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object && (!isFunction(predicate) || !predicate())) {\n\t\treturn;\n\t}\n\tif (supportsDescriptors) {\n\t\torigDefineProperty(object, name, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: value,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\tobject[name] = value;\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n"],"sourceRoot":""}